{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "THOM-DF-DEV-CMR2MDML-EastUS"
		},
		"AzureBlobStorage11_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage11'"
		},
		"AzureFileStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureFileStorage1'"
		},
		"CMR_Dest1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CMR_Dest1'"
		},
		"LS_ABLB_CMR_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_CMR'"
		},
		"LS_ABLB_ECCI_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_ECCI'"
		},
		"LS_ABLB_ECCIV_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_ECCIV'"
		},
		"LS_ABLB_ECCI_V_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_ECCI_V'"
		},
		"LS_FILE_ECCI_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_FILE_ECCI'"
		},
		"LS_FILE_ECCIS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_FILE_ECCIS'"
		},
		"LS_File_CMR_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_File_CMR'"
		},
		"LS_File_CMR1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_File_CMR1'"
		},
		"LS_Fileshare_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Fileshare'"
		},
		"LS_SQL_MDML_DMSandbox_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_MDML_DMSandbox'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=usmcdevdb.database.windows.net;Initial Catalog=MDML_DMSandbox"
		},
		"VML_BLOB_DEV_MDML_EastUS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'VML_BLOB_DEV_MDML_EastUS'"
		},
		"dev_sandbox_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dev_sandbox'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=usmcdevdb.database.windows.net;Initial Catalog=MDML_DMSandbox"
		},
		"LS_SQL_MDML_DEV_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azuresql-etl20240819.database.windows.net"
		},
		"LS_SQL_MDML_DEV_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "THOM-DB-DEV-MDML-EastUS"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/71c8d1a1-6097-48a4-90c9-b9fae74f4551/resourceGroups/WTRG/providers/Microsoft.Storage/storageAccounts/usmcdevfiles"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AitsAfterAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AitsAfterAction",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AitsAfterAction",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"CMR": {},
									"aitsAfterAction": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-CMR2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-30T17:10:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AitsAfterAction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AitsEventContract')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsEventContract",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AitsEventContract",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"CMR": {},
									"AitsMarketingPromotion": {},
									"aitsEventContract": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-CMR2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-21T20:01:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AitsEventContract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-EcciInfluencerAssignmentHistory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EcciInfluencerAssignmentHistory",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_EcciInfluencerAssignmentHistory",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"LocMcrcUnit": {},
									"AitsInfluencer": {},
									"EcciInfluencerAssignmentHistory": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-28T01:55:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_EcciInfluencerAssignmentHistory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-Unzip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "THOM Unzip ECCI Files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.zip",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ECCI_Zip_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-19T21:52:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/ECCI_Zip_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsAddressInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsAddressInfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsAddressInfo",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsAddressInfo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-11T20:36:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsAddressInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsContactEmailInfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsContactEmailInfo",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsContactEmailInfo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-19T22:50:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsContactEmailInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsContactPhoneInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsContactPhoneInfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsContactPhoneInfo",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsContactPhoneInfo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-24T21:15:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsContactPhoneInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsInfluencer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsInfluencer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsInfluencer",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsInfluencer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T10:57:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsInfluencer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsInfluencerEventReference')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsInfluencerEventReference",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsInfluencerEventReference",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsInfluencerEventReference": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-16T22:01:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsInfluencerEventReference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsPerson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsPerson",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPerson",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsPerson": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T10:57:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPerson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsPersonContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsPersonContactEmailInfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPersonContactEmailInfo",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsPersonContactEmailInfo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T10:57:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPersonContactEmailInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM-Pipe-DEV-ECCI2MDML-EastUS-aitsPersonContactPhoneInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsPersonContactPhoneInfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPersonContactPhoneInfo",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "'AzurePipeline'"
								},
								"datasetParameters": {
									"ECCI": {},
									"aitsPersonContactPhoneInfo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-03T18:24:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPersonContactPhoneInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnzipECCI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UNZIPECCI",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": null,
									"modifiedDatetimeEnd": null,
									"wildcardFileName": "*.zip"
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BinaryECCI_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ECCI_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-20T13:28:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BinaryECCI_Source')]",
				"[concat(variables('factoryId'), '/datasets/DS_ECCI_Destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unzip_CMR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unzip_CMR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.zip",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CMR_Source_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CMR_Dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-CMR2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-21T20:01:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CMR_Source_Files')]",
				"[concat(variables('factoryId'), '/datasets/CMR_Dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unzip_CMR1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unzip_CMR1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CMR_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CMR_Dest1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-CMR2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-16T21:04:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CMR_Source')]",
				"[concat(variables('factoryId'), '/datasets/CMR_Dest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsInfluencerEventReference')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsInfluencerEventReference",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitsInfluencerEventReference",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"aitscontactphoneinfo1": {},
									"aitsinfluncereventreference": {},
									"aitscontactemailinfon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-03T21:37:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitsInfluencerEventReference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsInfluncer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsinfluencer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitsInfluncer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"aitscontactphoneinfo1": {},
									"aitscontactphoneinfo": {},
									"aitscontactemailinfon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-28T22:27:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitsInfluncer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsPerson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsPerson",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitsPerson",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DSwkContainerData": {},
									"aitperson": {},
									"aitscontactemailinfon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-28T22:31:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitsPerson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsPersonContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsPersonContactEmailInfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitsPersonContactEmailInfo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"aitsPersonContactEmailInfo": {},
									"aitscontactphoneinfo": {},
									"aitscontactemailinfon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-28T22:35:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitsPersonContactEmailInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsaddressinfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitsaddressinfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitsaddressinfo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"addressinfo": {},
									"aitsAddressinformation": {},
									"aitsaddressinfo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-20T21:07:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitsaddressinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitscontactemailinfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitscontactemailinfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitscontactemailinfo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"aitscontactemailinfo": {},
									"aitscontactemailinfos": {},
									"aitscontactemailinfon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-28T16:04:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitscontactemailinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitscontactphoneinfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitscontactphoneinfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitscontactphoneinfo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"aitscontactphoneinfo1": {},
									"aitscontactphoneinfo": {},
									"aitscontactemailinfon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-28T22:12:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitscontactphoneinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitspersoncontactphoneinfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aitspersoncontactphoneinfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aitspersoncontactphoneinfo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"aitsPersonContactEmailInfo": {},
									"aitscontactphoneinfo": {},
									"aitscontactemailinfon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "THOM-Pipe-DF-ECCI2MDML-EastUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-28T22:59:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aitspersoncontactphoneinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AitsAfterAction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DEV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "problemsOrConcerns",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "deliverables",
						"type": "nvarchar"
					},
					{
						"name": "additionalDeliverables",
						"type": "nvarchar"
					},
					{
						"name": "personalInNatureDeliverables",
						"type": "nvarchar"
					},
					{
						"name": "numberOfAttendees",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfInfluencerContactsGenerated",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfLeadCardsSubmitted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfLeadsThatInteractedWithMarines",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfOverallInteractions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfSocialMediaImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfSocialMediaPosts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfTraditionalMediaImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfTraditionalMediaPosts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "objective",
						"type": "nvarchar"
					},
					{
						"name": "ownerBilletGroup",
						"type": "nvarchar"
					},
					{
						"name": "statusLookup",
						"type": "nvarchar"
					},
					{
						"name": "subStatusLookup",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "numberOfQualifiedLeadsGenerated",
						"type": "int",
						"precision": 10
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					},
					{
						"name": "numberOfInfluencersThatInteractedWithMarines",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsafteraction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DEV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AitsEventContract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "systemGeneratedName",
						"type": "nvarchar"
					},
					{
						"name": "selfReportedOtherCategory",
						"type": "nvarchar"
					},
					{
						"name": "purpose",
						"type": "nvarchar"
					},
					{
						"name": "EVENT_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "cost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "LOCATION_NAME",
						"type": "nvarchar"
					},
					{
						"name": "STREET_ADDRESS1",
						"type": "nvarchar"
					},
					{
						"name": "STREET_ADDRESS2",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "stateLookup",
						"type": "nvarchar"
					},
					{
						"name": "zipCode",
						"type": "nvarchar"
					},
					{
						"name": "fk_fiscalYearId",
						"type": "nvarchar"
					},
					{
						"name": "fk_afteractionId",
						"type": "nchar"
					},
					{
						"name": "fk_fundingMcrcUnitId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fk_purchaseRequestId",
						"type": "nvarchar"
					},
					{
						"name": "fk_parentEventContractId",
						"type": "nvarchar"
					},
					{
						"name": "fk_proposalFileId",
						"type": "nvarchar"
					},
					{
						"name": "fk_promotionId",
						"type": "nvarchar"
					},
					{
						"name": "assignedOwner",
						"type": "nvarchar"
					},
					{
						"name": "statusLookup",
						"type": "nvarchar"
					},
					{
						"name": "subStatusLookup",
						"type": "nvarchar"
					},
					{
						"name": "dateContractSigned",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "deliverables",
						"type": "nvarchar"
					},
					{
						"name": "additionalDeliverables",
						"type": "nvarchar"
					},
					{
						"name": "personalInNatureDeliverables",
						"type": "nvarchar"
					},
					{
						"name": "estimatedAttendence",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estimatedNumberOfInfluencerContacts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estimatedNumberOfLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estimatedNumberOfOverallInteractions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estimatedNumberOfSocialMediaImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estimatedNumberOfSocialMediaPosts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estimatedNumberOfTraditionalMediaPosts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estimatedNumberOfTraditionalImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numberOfContractedOnSiteActivations",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hasPersonalInNatureDeliverables",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "isContracted",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "isFree",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "hheac",
						"type": "nvarchar"
					},
					{
						"name": "submitter",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fk_proposalId",
						"type": "nvarchar"
					},
					{
						"name": "hasParentContract",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "startDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "endDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "usesHandheld",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "isforInfluencers",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "includesBattlePosition",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "fk_McrcUnitId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					},
					{
						"name": "FK_LOC_UNIT_ID",
						"type": "nvarchar"
					},
					{
						"name": "rmiFields",
						"type": "nvarchar"
					},
					{
						"name": "rmiQuestions",
						"type": "nvarchar"
					},
					{
						"name": "FK_ASSIGNED_OWNER_LOC_UNIT_ID",
						"type": "nvarchar"
					},
					{
						"name": "assignedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "dueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsEventContract"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AitsMarketingPromotion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					},
					{
						"name": "fk_marketingCampaignId",
						"type": "nchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "statusLookup",
						"type": "nvarchar"
					},
					{
						"name": "startDateGmt",
						"type": "date"
					},
					{
						"name": "endDateGmt",
						"type": "date"
					},
					{
						"name": "isRecurrence",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isWebFacing",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "submitter",
						"type": "nvarchar"
					},
					{
						"name": "submitterFormatted",
						"type": "nvarchar"
					},
					{
						"name": "submittedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "shortDescription",
						"type": "nvarchar"
					},
					{
						"name": "detailedDescription",
						"type": "nvarchar"
					},
					{
						"name": "landingPageUriAfterPromo",
						"type": "nvarchar"
					},
					{
						"name": "landingPageUriDuringPromo",
						"type": "nvarchar"
					},
					{
						"name": "fk_reviewId",
						"type": "nchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsMarketingPromotion"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CMR_Dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_CMR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Event.csv",
						"folderPath": "file-aitsi-ems-etl-20250328.zip",
						"container": "cmr"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "parentId",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "cost",
						"type": "String"
					},
					{
						"name": "dateContractedSigned",
						"type": "String"
					},
					{
						"name": "eacCode",
						"type": "String"
					},
					{
						"name": "approverId",
						"type": "String"
					},
					{
						"name": "approvalDue",
						"type": "String"
					},
					{
						"name": "regionCode",
						"type": "String"
					},
					{
						"name": "districtCode",
						"type": "String"
					},
					{
						"name": "recruitingStationCode",
						"type": "String"
					},
					{
						"name": "recruitingSubStationCode",
						"type": "String"
					},
					{
						"name": "ossCode",
						"type": "String"
					},
					{
						"name": "fundingRegionCode",
						"type": "String"
					},
					{
						"name": "fundingDistrictCode",
						"type": "String"
					},
					{
						"name": "fundingRecruitingStationCode",
						"type": "String"
					},
					{
						"name": "fundingRecruitingSubStationCode",
						"type": "String"
					},
					{
						"name": "fundingOssCode",
						"type": "String"
					},
					{
						"name": "qualifiedName",
						"type": "String"
					},
					{
						"name": "sourceCode",
						"type": "String"
					},
					{
						"name": "fiscalYear",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "startDate",
						"type": "String"
					},
					{
						"name": "endDate",
						"type": "String"
					},
					{
						"name": "customCategory",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "subStatus",
						"type": "String"
					},
					{
						"name": "isFromPr",
						"type": "String"
					},
					{
						"name": "isFromEac",
						"type": "String"
					},
					{
						"name": "contract",
						"type": "String"
					},
					{
						"name": "schoolName",
						"type": "String"
					},
					{
						"name": "raoUsername",
						"type": "String"
					},
					{
						"name": "rejectComments",
						"type": "String"
					},
					{
						"name": "approvedDistrictName",
						"type": "String"
					},
					{
						"name": "approvedRecruitingStationName",
						"type": "String"
					},
					{
						"name": "approvedRecruitingSubStationName",
						"type": "String"
					},
					{
						"name": "approvingUser",
						"type": "String"
					},
					{
						"name": "approvingBillet",
						"type": "String"
					},
					{
						"name": "approvingLocation",
						"type": "String"
					},
					{
						"name": "purpose",
						"type": "String"
					},
					{
						"name": "estAttendance",
						"type": "String"
					},
					{
						"name": "behavior",
						"type": "String"
					},
					{
						"name": "awareness",
						"type": "String"
					},
					{
						"name": "estEngagements",
						"type": "String"
					},
					{
						"name": "estMediaPosts",
						"type": "String"
					},
					{
						"name": "estMediaImpressions",
						"type": "String"
					},
					{
						"name": "estSocialMediaPosts",
						"type": "String"
					},
					{
						"name": "estSocialMediaImpressions",
						"type": "String"
					},
					{
						"name": "estQualifiedLeads",
						"type": "String"
					},
					{
						"name": "estInfluencerContacts",
						"type": "String"
					},
					{
						"name": "estFollowUps",
						"type": "String"
					},
					{
						"name": "estInteraction",
						"type": "String"
					},
					{
						"name": "estInfluencerInteraction",
						"type": "String"
					},
					{
						"name": "estOnsiteActivations",
						"type": "String"
					},
					{
						"name": "deliverable",
						"type": "String"
					},
					{
						"name": "addlDeliverables",
						"type": "String"
					},
					{
						"name": "recommend",
						"type": "String"
					},
					{
						"name": "emvAttend",
						"type": "String"
					},
					{
						"name": "recommendReason",
						"type": "String"
					},
					{
						"name": "assignedBy",
						"type": "String"
					},
					{
						"name": "oldCategory",
						"type": "String"
					},
					{
						"name": "oldEventId",
						"type": "String"
					},
					{
						"name": "createdById",
						"type": "String"
					},
					{
						"name": "createdByUsername",
						"type": "String"
					},
					{
						"name": "updatedById",
						"type": "String"
					},
					{
						"name": "updatedByUsername",
						"type": "String"
					},
					{
						"name": "createdAt",
						"type": "String"
					},
					{
						"name": "updatedAt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_CMR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CMR_Dest1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CMR_Dest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cmr"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CMR_Dest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CMR_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_File_CMR1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": "file-aitsi-ems-etl-20250328.zip"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_File_CMR1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CMR_Source_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_File_CMR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": "file-aitsi-ems-etl-20250311-10ROWS.zip"
					},
					"columnDelimiter": ",",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_File_CMR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABL_BinaryECCI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILE_ECCIS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					},
					"columnDelimiter": ",",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InfluencerEventId",
						"type": "String"
					},
					{
						"name": "ApplicationId",
						"type": "String"
					},
					{
						"name": "EventId",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					},
					{
						"name": "CreatedById",
						"type": "String"
					},
					{
						"name": "DateCreatedUTC",
						"type": "String"
					},
					{
						"name": "DateUpdatedUTC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILE_ECCIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BinaryECCI_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILE_ECCIS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILE_ECCIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ECCI_Destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_ECCI_V",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ecci"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_ECCI_V')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_InfluencerEvent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_ECCI_V",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "InfluencerEvent.csv",
						"folderPath": "file-aitsi-ecci-etl-20250109.zip",
						"container": "ecci"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InfluencerEventId",
						"type": "String"
					},
					{
						"name": "ApplicationId",
						"type": "String"
					},
					{
						"name": "EventId",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					},
					{
						"name": "CreatedById",
						"type": "String"
					},
					{
						"name": "DateCreatedUTC",
						"type": "String"
					},
					{
						"name": "DateUpdatedUTC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_ECCI_V')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitsInfluencerEventReference')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "fk_influencerId",
						"type": "nchar"
					},
					{
						"name": "fk_eventContract",
						"type": "nchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsInfluencerEventReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitsPerson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "mcrissEthnicCategory",
						"type": "nvarchar"
					},
					{
						"name": "mcrissGender",
						"type": "nvarchar"
					},
					{
						"name": "genderIsInferred",
						"type": "bit"
					},
					{
						"name": "mcrissRace",
						"type": "nvarchar"
					},
					{
						"name": "mcrisRaceOtherDetail",
						"type": "nvarchar"
					},
					{
						"name": "age",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "yearOfBirth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "monthOfBirth",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "namePrefix",
						"type": "nvarchar"
					},
					{
						"name": "firstName",
						"type": "nvarchar"
					},
					{
						"name": "lastName",
						"type": "nvarchar"
					},
					{
						"name": "middleName",
						"type": "nvarchar"
					},
					{
						"name": "nameSuffix",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentFulfillmentItem",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAttributedPromotion",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignment",
						"type": "nvarchar"
					},
					{
						"name": "mcrissId",
						"type": "nvarchar"
					},
					{
						"name": "mcrissAcceptance",
						"type": "nvarchar"
					},
					{
						"name": "environmentOfRecord",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fk_locMcrcSchoolId",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsPerson"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitsPersonContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "char"
					},
					{
						"name": "fk_contactEmailInfoId",
						"type": "varchar"
					},
					{
						"name": "fk_personId",
						"type": "char"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "createdBy",
						"type": "varchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updatedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsPersonContactEmailInfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitsaddressinfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "addressLine1",
						"type": "nvarchar"
					},
					{
						"name": "addressLine2",
						"type": "nvarchar"
					},
					{
						"name": "addressLine3",
						"type": "nvarchar"
					},
					{
						"name": "archivedDate",
						"type": "date"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "county",
						"type": "nvarchar"
					},
					{
						"name": "isArchived",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isPrimary",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "latitude",
						"type": "nvarchar"
					},
					{
						"name": "longitude",
						"type": "nvarchar"
					},
					{
						"name": "optedOut",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "optedOutDate",
						"type": "date"
					},
					{
						"name": "stateLookup",
						"type": "nvarchar"
					},
					{
						"name": "statusLookup",
						"type": "nvarchar"
					},
					{
						"name": "statusDate",
						"type": "date"
					},
					{
						"name": "statusReason",
						"type": "nvarchar"
					},
					{
						"name": "typeLookup",
						"type": "nvarchar"
					},
					{
						"name": "zipCode",
						"type": "nvarchar"
					},
					{
						"name": "zipRoute",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGMT",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGMT",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsaddressinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitscontactemailinfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "statusLookup",
						"type": "nvarchar"
					},
					{
						"name": "statusReason",
						"type": "nvarchar"
					},
					{
						"name": "typeLookup",
						"type": "nvarchar"
					},
					{
						"name": "validationDate",
						"type": "date"
					},
					{
						"name": "optedOutDate",
						"type": "date"
					},
					{
						"name": "optedOut",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isPrimary",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isArchived",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "distributionCode",
						"type": "nvarchar"
					},
					{
						"name": "archivedDate",
						"type": "date"
					},
					{
						"name": "statusDate",
						"type": "date"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitscontactemailinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitscontactphoneinfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "archivedDate",
						"type": "date"
					},
					{
						"name": "countryCode",
						"type": "nvarchar"
					},
					{
						"name": "extension",
						"type": "nvarchar"
					},
					{
						"name": "isArchived",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isPrimary",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "optedOut",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "optedOutDate",
						"type": "date"
					},
					{
						"name": "typeLookup",
						"type": "nvarchar"
					},
					{
						"name": "validationDate",
						"type": "date"
					},
					{
						"name": "number",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitscontactphoneinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitsinfluencer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "hash",
						"type": "nvarchar"
					},
					{
						"name": "fk_personId",
						"type": "nvarchar"
					},
					{
						"name": "occupation",
						"type": "nvarchar"
					},
					{
						"name": "occupationOther",
						"type": "nvarchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "interests",
						"type": "nvarchar"
					},
					{
						"name": "interestsOtherValue",
						"type": "nvarchar"
					},
					{
						"name": "referallSource",
						"type": "nvarchar"
					},
					{
						"name": "referallSourceOther",
						"type": "nvarchar"
					},
					{
						"name": "relationToUsmc",
						"type": "nvarchar"
					},
					{
						"name": "relationToUsmcOther",
						"type": "nvarchar"
					},
					{
						"name": "collegeAttended",
						"type": "nvarchar"
					},
					{
						"name": "organizationAffiliations",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignedBilletGroup",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignmentMethod",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignmentComments",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentSource",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentStatus",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentStatusReason",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentStatusDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "profileCompletedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "firstEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "fiveDayEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "tenDayEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "reassignmentCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pendingArchiveEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "fk_educationId",
						"type": "nchar"
					},
					{
						"name": "mostRecentAssignmentDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "homeTownCity",
						"type": "nvarchar"
					},
					{
						"name": "homeTownState",
						"type": "nvarchar"
					},
					{
						"name": "doNotContact",
						"type": "bit"
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					},
					{
						"name": "FK_LOC_UNIT_ID",
						"type": "nvarchar"
					},
					{
						"name": "RANK",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsinfluencer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_aitspersoncontactphoneinfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "fk_personId",
						"type": "nchar"
					},
					{
						"name": "fk_contactPhoneInfoId",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitspersoncontactphoneinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_wk_ContainerData_Flattened')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_ECCI_V",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ECCI_Dataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "wk_ContainerData_Flattened.csv",
						"folderPath": "file-aitsi-fluidforms-etl-20241212.zip",
						"container": "ecci"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PersonId",
						"type": "String"
					},
					{
						"name": "ContainerId",
						"type": "String"
					},
					{
						"name": "Address_Apt_Unit",
						"type": "String"
					},
					{
						"name": "Address_City",
						"type": "String"
					},
					{
						"name": "Address_State",
						"type": "String"
					},
					{
						"name": "Address_Street",
						"type": "String"
					},
					{
						"name": "Address_Zip",
						"type": "String"
					},
					{
						"name": "Advanced_Course_Name",
						"type": "String"
					},
					{
						"name": "Advanced_Course_Type",
						"type": "String"
					},
					{
						"name": "Advanced_Courses_Taken",
						"type": "String"
					},
					{
						"name": "Awards_Selector",
						"type": "String"
					},
					{
						"name": "College",
						"type": "String"
					},
					{
						"name": "Date_Attended",
						"type": "String"
					},
					{
						"name": "Date_of_Birth_Month",
						"type": "String"
					},
					{
						"name": "Date_of_Birth_Year",
						"type": "String"
					},
					{
						"name": "Disciplinary_Issues",
						"type": "String"
					},
					{
						"name": "Do_Not_Contact",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Email_list_opt_out",
						"type": "String"
					},
					{
						"name": "Ethnicity",
						"type": "String"
					},
					{
						"name": "Event_Attendance",
						"type": "String"
					},
					{
						"name": "Event_Attendance_Describe",
						"type": "String"
					},
					{
						"name": "Event_City",
						"type": "String"
					},
					{
						"name": "Event_State",
						"type": "String"
					},
					{
						"name": "Extracurricular_Activities",
						"type": "String"
					},
					{
						"name": "Extracurricular_Activities_Years",
						"type": "String"
					},
					{
						"name": "Extracurricular_Selector",
						"type": "String"
					},
					{
						"name": "First_Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "GPA_Scale",
						"type": "String"
					},
					{
						"name": "Grade_Level_Junior",
						"type": "String"
					},
					{
						"name": "Grade_Level_Junior_or_Sophomore",
						"type": "String"
					},
					{
						"name": "Graduation_Year",
						"type": "String"
					},
					{
						"name": "Homeschooled",
						"type": "String"
					},
					{
						"name": "Hometown_City",
						"type": "String"
					},
					{
						"name": "Hometown_State",
						"type": "String"
					},
					{
						"name": "Honors_Awards",
						"type": "String"
					},
					{
						"name": "Influencer_Opt_In",
						"type": "String"
					},
					{
						"name": "Interests",
						"type": "String"
					},
					{
						"name": "JROTC_Branch",
						"type": "String"
					},
					{
						"name": "JROTC_Selector",
						"type": "String"
					},
					{
						"name": "Last_Name",
						"type": "String"
					},
					{
						"name": "Leadership_Selector",
						"type": "String"
					},
					{
						"name": "Leadership_Years",
						"type": "String"
					},
					{
						"name": "Legal_Infraction",
						"type": "String"
					},
					{
						"name": "Legal_Resident",
						"type": "String"
					},
					{
						"name": "Letter_of_Recommendation_1",
						"type": "String"
					},
					{
						"name": "Marines_Opt_In",
						"type": "String"
					},
					{
						"name": "Nominee",
						"type": "String"
					},
					{
						"name": "Nominee_Relationship",
						"type": "String"
					},
					{
						"name": "Occupation",
						"type": "String"
					},
					{
						"name": "Other_Courses",
						"type": "String"
					},
					{
						"name": "Other_Interests",
						"type": "String"
					},
					{
						"name": "Other_Marines_Relationship_Type",
						"type": "String"
					},
					{
						"name": "Other_Nominee_Relationship",
						"type": "String"
					},
					{
						"name": "Other_Occuptation",
						"type": "String"
					},
					{
						"name": "Other_Sports",
						"type": "String"
					},
					{
						"name": "Phone_Number",
						"type": "String"
					},
					{
						"name": "Poolee_Academy_NROTC",
						"type": "String"
					},
					{
						"name": "Poolee_Academy_NROTC_Delayed_Entry_Program",
						"type": "String"
					},
					{
						"name": "Referral",
						"type": "String"
					},
					{
						"name": "Referral_Other",
						"type": "String"
					},
					{
						"name": "Relationship_to_Marines",
						"type": "String"
					},
					{
						"name": "School_Name",
						"type": "String"
					},
					{
						"name": "School_Community_Leadership",
						"type": "String"
					},
					{
						"name": "SIPRM_Username",
						"type": "String"
					},
					{
						"name": "SLCDA_Referral",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Sports_JV_Varsity",
						"type": "String"
					},
					{
						"name": "Sports_Played",
						"type": "String"
					},
					{
						"name": "Sports_Selector",
						"type": "String"
					},
					{
						"name": "Sports_Years_Played",
						"type": "String"
					},
					{
						"name": "Team_Captain",
						"type": "String"
					},
					{
						"name": "Team_Captain_Describe",
						"type": "String"
					},
					{
						"name": "Visible_Tattoos",
						"type": "String"
					},
					{
						"name": "Volunteer_Hours_Week",
						"type": "String"
					},
					{
						"name": "Volunteer_Selector",
						"type": "String"
					},
					{
						"name": "Volunteer_Work",
						"type": "String"
					},
					{
						"name": "Work_Experience",
						"type": "String"
					},
					{
						"name": "Work_Selector",
						"type": "String"
					},
					{
						"name": "Work_Years",
						"type": "String"
					},
					{
						"name": "DateCreatedUTC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_ECCI_V')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECCI_Zip_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_ECCI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ecci"
					},
					"columnDelimiter": ",",
					"compressionCodec": null,
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PK\u0003\u0004\u0014\u0000\u0000\u0000\b\u0000ٛxX/��G\bP\f\u0000R�\u001e\u0000 \u0000\u0000\u0000File-AITS1-ECCI-DEV-20240324.csv��[s�H�&�~\"�����\u0011�+��\u0017%\u0012��*I�H���~�HX�M�\u001a^�VU�?�J�\u0014AR��{\u000egw�E\u0002$2s�Z߷r]������p�\u0013��J*�\u00171�9c\\\u0017E�\u000b���F��",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_ECCI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EcciInfluencerAssignmentHistory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "nvarchar"
					},
					{
						"name": "FK_INFLUENCER_ID",
						"type": "nvarchar"
					},
					{
						"name": "FK_LOC_UNIT_ID",
						"type": "nvarchar"
					},
					{
						"name": "CREATED_BY",
						"type": "nvarchar"
					},
					{
						"name": "CREATED_ON",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UPDATED_BY",
						"type": "nvarchar"
					},
					{
						"name": "UPDATED_ON",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ECCI_INFLUENCER_ASSIGNMENT_HISTORY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EventReport')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_CMR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EventReport.csv",
						"folderPath": "file-aitsi-ems-etl-20250328.zip",
						"container": "cmr"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "userId",
						"type": "String"
					},
					{
						"name": "eventId",
						"type": "String"
					},
					{
						"name": "approverId",
						"type": "String"
					},
					{
						"name": "approvalDue",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "subStatus",
						"type": "String"
					},
					{
						"name": "attendance",
						"type": "String"
					},
					{
						"name": "marinesAttendance",
						"type": "String"
					},
					{
						"name": "leadCards",
						"type": "String"
					},
					{
						"name": "attended",
						"type": "String"
					},
					{
						"name": "interviewsScheduled",
						"type": "String"
					},
					{
						"name": "recruiter",
						"type": "String"
					},
					{
						"name": "electricity",
						"type": "String"
					},
					{
						"name": "accommodating",
						"type": "String"
					},
					{
						"name": "recommend",
						"type": "String"
					},
					{
						"name": "emvAttend",
						"type": "String"
					},
					{
						"name": "recommendReason",
						"type": "String"
					},
					{
						"name": "deliverable",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "objective",
						"type": "String"
					},
					{
						"name": "behavior",
						"type": "String"
					},
					{
						"name": "awareness",
						"type": "String"
					},
					{
						"name": "engagements",
						"type": "String"
					},
					{
						"name": "mediaPosts",
						"type": "String"
					},
					{
						"name": "mediaImpressions",
						"type": "String"
					},
					{
						"name": "socialMediaPosts",
						"type": "String"
					},
					{
						"name": "socialMediaImpressions",
						"type": "String"
					},
					{
						"name": "qualifiedLeads",
						"type": "String"
					},
					{
						"name": "influencerContacts",
						"type": "String"
					},
					{
						"name": "followUps",
						"type": "String"
					},
					{
						"name": "interaction",
						"type": "String"
					},
					{
						"name": "influencerInteraction",
						"type": "String"
					},
					{
						"name": "onsiteActivations",
						"type": "String"
					},
					{
						"name": "targetMarketRating",
						"type": "String"
					},
					{
						"name": "targetMarketComments",
						"type": "String"
					},
					{
						"name": "estimatedAttendance",
						"type": "String"
					},
					{
						"name": "estimatedTargetAttendance",
						"type": "String"
					},
					{
						"name": "comingOfAgeRating",
						"type": "String"
					},
					{
						"name": "comingOfAgeComments",
						"type": "String"
					},
					{
						"name": "influentialRating",
						"type": "String"
					},
					{
						"name": "influentialComments",
						"type": "String"
					},
					{
						"name": "communityRelationsRating",
						"type": "String"
					},
					{
						"name": "communityRelationsComments",
						"type": "String"
					},
					{
						"name": "leadGenerationRating",
						"type": "String"
					},
					{
						"name": "leadGenerationComments",
						"type": "String"
					},
					{
						"name": "keyParticipants",
						"type": "String"
					},
					{
						"name": "problems",
						"type": "String"
					},
					{
						"name": "concerns",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					},
					{
						"name": "approvedDistrictName",
						"type": "String"
					},
					{
						"name": "approvedRecruitingStationName",
						"type": "String"
					},
					{
						"name": "approvingUser",
						"type": "String"
					},
					{
						"name": "approvingBillet",
						"type": "String"
					},
					{
						"name": "approvingLocation",
						"type": "String"
					},
					{
						"name": "createdById",
						"type": "String"
					},
					{
						"name": "createdByUsername",
						"type": "String"
					},
					{
						"name": "updatedById",
						"type": "String"
					},
					{
						"name": "updatedByUsername",
						"type": "String"
					},
					{
						"name": "createdAt",
						"type": "String"
					},
					{
						"name": "updatedAt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_CMR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsAddressInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "addressLine1",
						"type": "nvarchar"
					},
					{
						"name": "addressLine2",
						"type": "nvarchar"
					},
					{
						"name": "addressLine3",
						"type": "nvarchar"
					},
					{
						"name": "archivedDate",
						"type": "date"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "county",
						"type": "nvarchar"
					},
					{
						"name": "isArchived",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isPrimary",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "latitude",
						"type": "nvarchar"
					},
					{
						"name": "longitude",
						"type": "nvarchar"
					},
					{
						"name": "optedOut",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "optedOutDate",
						"type": "date"
					},
					{
						"name": "stateLookup",
						"type": "nvarchar"
					},
					{
						"name": "statusLookup",
						"type": "nvarchar"
					},
					{
						"name": "statusDate",
						"type": "date"
					},
					{
						"name": "statusReason",
						"type": "nvarchar"
					},
					{
						"name": "typeLookup",
						"type": "nvarchar"
					},
					{
						"name": "zipCode",
						"type": "nvarchar"
					},
					{
						"name": "zipRoute",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGMT",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGMT",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsaddressinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "statusLookup",
						"type": "nvarchar"
					},
					{
						"name": "statusReason",
						"type": "nvarchar"
					},
					{
						"name": "typeLookup",
						"type": "nvarchar"
					},
					{
						"name": "validationDate",
						"type": "date"
					},
					{
						"name": "optedOutDate",
						"type": "date"
					},
					{
						"name": "optedOut",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isPrimary",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isArchived",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "distributionCode",
						"type": "nvarchar"
					},
					{
						"name": "archivedDate",
						"type": "date"
					},
					{
						"name": "statusDate",
						"type": "date"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitscontactemailinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsContactPhoneInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "archivedDate",
						"type": "date"
					},
					{
						"name": "countryCode",
						"type": "nvarchar"
					},
					{
						"name": "extension",
						"type": "nvarchar"
					},
					{
						"name": "isArchived",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "isPrimary",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "optedOut",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "optedOutDate",
						"type": "date"
					},
					{
						"name": "typeLookup",
						"type": "nvarchar"
					},
					{
						"name": "validationDate",
						"type": "date"
					},
					{
						"name": "number",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitscontactphoneinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsInfluencer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dev_sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "char"
					},
					{
						"name": "createdBy",
						"type": "varchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updatedBy",
						"type": "varchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "hash",
						"type": "varchar"
					},
					{
						"name": "fk_personId",
						"type": "varchar"
					},
					{
						"name": "occupation",
						"type": "varchar"
					},
					{
						"name": "occupationOther",
						"type": "varchar"
					},
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "interests",
						"type": "varchar"
					},
					{
						"name": "interestsOtherValue",
						"type": "varchar"
					},
					{
						"name": "referallSource",
						"type": "varchar"
					},
					{
						"name": "referallSourceOther",
						"type": "varchar"
					},
					{
						"name": "relationToUsmc",
						"type": "varchar"
					},
					{
						"name": "relationToUsmcOther",
						"type": "varchar"
					},
					{
						"name": "collegeAttended",
						"type": "varchar"
					},
					{
						"name": "organizationAffiliations",
						"type": "varchar"
					},
					{
						"name": "mostRecentAssignedBilletGroup",
						"type": "varchar"
					},
					{
						"name": "mostRecentAssignmentMethod",
						"type": "varchar"
					},
					{
						"name": "mostRecentAssignmentComments",
						"type": "varchar"
					},
					{
						"name": "mostRecentSource",
						"type": "varchar"
					},
					{
						"name": "mostRecentStatus",
						"type": "varchar"
					},
					{
						"name": "mostRecentStatusReason",
						"type": "varchar"
					},
					{
						"name": "mostRecentStatusDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "profileCompletedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "firstEmailDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fiveDayEmailDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "tenDayEmailDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "reassignmentCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pendingArchiveEmailDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fk_educationId",
						"type": "char"
					},
					{
						"name": "mostRecentAssignmentDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "homeTownCity",
						"type": "varchar"
					},
					{
						"name": "homeTownState",
						"type": "varchar"
					},
					{
						"name": "doNotContact",
						"type": "bit"
					},
					{
						"name": "aitsBaselineId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsInfluencer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dev_sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsInfluencerEventReference')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "fk_influencerId",
						"type": "nchar"
					},
					{
						"name": "fk_eventContract",
						"type": "nchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsInfluencerEventReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsPerson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dev_sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "char"
					},
					{
						"name": "mcrissEthnicCategory",
						"type": "varchar"
					},
					{
						"name": "mcrissGender",
						"type": "varchar"
					},
					{
						"name": "genderIsInferred",
						"type": "bit"
					},
					{
						"name": "mcrissRace",
						"type": "varchar"
					},
					{
						"name": "mcrisRaceOtherDetail",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "yearOfBirth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "monthOfBirth",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "namePrefix",
						"type": "varchar"
					},
					{
						"name": "firstName",
						"type": "varchar"
					},
					{
						"name": "lastName",
						"type": "varchar"
					},
					{
						"name": "middleName",
						"type": "varchar"
					},
					{
						"name": "nameSuffix",
						"type": "varchar"
					},
					{
						"name": "mostRecentFulfillmentItem",
						"type": "varchar"
					},
					{
						"name": "mostRecentAttributedPromotion",
						"type": "varchar"
					},
					{
						"name": "mostRecentAssignment",
						"type": "varchar"
					},
					{
						"name": "mcrissId",
						"type": "varchar"
					},
					{
						"name": "mcrissAcceptance",
						"type": "varchar"
					},
					{
						"name": "environmentOfRecord",
						"type": "varchar"
					},
					{
						"name": "createdBy",
						"type": "varchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updatedBy",
						"type": "varchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsPerson"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dev_sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsPersonContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "char"
					},
					{
						"name": "fk_contactEmailInfoId",
						"type": "varchar"
					},
					{
						"name": "fk_personId",
						"type": "char"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "createdBy",
						"type": "varchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updatedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsPersonContactEmailInfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsPersonContactPhoneInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "fk_personId",
						"type": "nchar"
					},
					{
						"name": "fk_contactPhoneInfoId",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitspersoncontactphoneinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aits_Influencer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "hash",
						"type": "nvarchar"
					},
					{
						"name": "fk_personId",
						"type": "nvarchar"
					},
					{
						"name": "occupation",
						"type": "nvarchar"
					},
					{
						"name": "occupationOther",
						"type": "nvarchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "interests",
						"type": "nvarchar"
					},
					{
						"name": "interestsOtherValue",
						"type": "nvarchar"
					},
					{
						"name": "referallSource",
						"type": "nvarchar"
					},
					{
						"name": "referallSourceOther",
						"type": "nvarchar"
					},
					{
						"name": "relationToUsmc",
						"type": "nvarchar"
					},
					{
						"name": "relationToUsmcOther",
						"type": "nvarchar"
					},
					{
						"name": "collegeAttended",
						"type": "nvarchar"
					},
					{
						"name": "organizationAffiliations",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignedBilletGroup",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignmentMethod",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignmentComments",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentSource",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentStatus",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentStatusReason",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentStatusDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "profileCompletedDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "firstEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "fiveDayEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "tenDayEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "reassignmentCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pendingArchiveEmailDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "fk_educationId",
						"type": "nchar"
					},
					{
						"name": "mostRecentAssignmentDateGmt",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "homeTownCity",
						"type": "nvarchar"
					},
					{
						"name": "homeTownState",
						"type": "nvarchar"
					},
					{
						"name": "doNotContact",
						"type": "bit"
					},
					{
						"name": "aitsBaselineId",
						"type": "nvarchar"
					},
					{
						"name": "FK_LOC_UNIT_ID",
						"type": "nvarchar"
					},
					{
						"name": "RANK",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsinfluencer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aits_Person')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nchar"
					},
					{
						"name": "mcrissEthnicCategory",
						"type": "nvarchar"
					},
					{
						"name": "mcrissGender",
						"type": "nvarchar"
					},
					{
						"name": "genderIsInferred",
						"type": "bit"
					},
					{
						"name": "mcrissRace",
						"type": "nvarchar"
					},
					{
						"name": "mcrisRaceOtherDetail",
						"type": "nvarchar"
					},
					{
						"name": "age",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "yearOfBirth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "monthOfBirth",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "namePrefix",
						"type": "nvarchar"
					},
					{
						"name": "firstName",
						"type": "nvarchar"
					},
					{
						"name": "lastName",
						"type": "nvarchar"
					},
					{
						"name": "middleName",
						"type": "nvarchar"
					},
					{
						"name": "nameSuffix",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentFulfillmentItem",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAttributedPromotion",
						"type": "nvarchar"
					},
					{
						"name": "mostRecentAssignment",
						"type": "nvarchar"
					},
					{
						"name": "mcrissId",
						"type": "nvarchar"
					},
					{
						"name": "mcrissAcceptance",
						"type": "nvarchar"
					},
					{
						"name": "environmentOfRecord",
						"type": "nvarchar"
					},
					{
						"name": "createdBy",
						"type": "nvarchar"
					},
					{
						"name": "createdDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updatedBy",
						"type": "nvarchar"
					},
					{
						"name": "updatedDateGmt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fk_locMcrcSchoolId",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "aitsPerson"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecci_unzip_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_CMR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "wk_ContainerData_Flattened.csv",
						"folderPath": "file-aitsi-fluidforms-etl-20241212.zip",
						"container": "ecci"
					},
					"columnDelimiter": ",",
					"compressionCodec": null,
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PersonId",
						"type": "String"
					},
					{
						"name": "ContainerId",
						"type": "String"
					},
					{
						"name": "Address_Apt_Unit",
						"type": "String"
					},
					{
						"name": "Address_City",
						"type": "String"
					},
					{
						"name": "Address_State",
						"type": "String"
					},
					{
						"name": "Address_Street",
						"type": "String"
					},
					{
						"name": "Address_Zip",
						"type": "String"
					},
					{
						"name": "Advanced_Course_Name",
						"type": "String"
					},
					{
						"name": "Advanced_Course_Type",
						"type": "String"
					},
					{
						"name": "Advanced_Courses_Taken",
						"type": "String"
					},
					{
						"name": "Awards_Selector",
						"type": "String"
					},
					{
						"name": "College",
						"type": "String"
					},
					{
						"name": "Date_Attended",
						"type": "String"
					},
					{
						"name": "Date_of_Birth_Month",
						"type": "String"
					},
					{
						"name": "Date_of_Birth_Year",
						"type": "String"
					},
					{
						"name": "Disciplinary_Issues",
						"type": "String"
					},
					{
						"name": "Do_Not_Contact",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Email_list_opt_out",
						"type": "String"
					},
					{
						"name": "Ethnicity",
						"type": "String"
					},
					{
						"name": "Event_Attendance",
						"type": "String"
					},
					{
						"name": "Event_Attendance_Describe",
						"type": "String"
					},
					{
						"name": "Event_City",
						"type": "String"
					},
					{
						"name": "Event_State",
						"type": "String"
					},
					{
						"name": "Extracurricular_Activities",
						"type": "String"
					},
					{
						"name": "Extracurricular_Activities_Years",
						"type": "String"
					},
					{
						"name": "Extracurricular_Selector",
						"type": "String"
					},
					{
						"name": "First_Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "GPA_Scale",
						"type": "String"
					},
					{
						"name": "Grade_Level_Junior",
						"type": "String"
					},
					{
						"name": "Grade_Level_Junior_or_Sophomore",
						"type": "String"
					},
					{
						"name": "Graduation_Year",
						"type": "String"
					},
					{
						"name": "Homeschooled",
						"type": "String"
					},
					{
						"name": "Hometown_City",
						"type": "String"
					},
					{
						"name": "Hometown_State",
						"type": "String"
					},
					{
						"name": "Honors_Awards",
						"type": "String"
					},
					{
						"name": "Influencer_Opt_In",
						"type": "String"
					},
					{
						"name": "Interests",
						"type": "String"
					},
					{
						"name": "JROTC_Branch",
						"type": "String"
					},
					{
						"name": "JROTC_Selector",
						"type": "String"
					},
					{
						"name": "Last_Name",
						"type": "String"
					},
					{
						"name": "Leadership_Selector",
						"type": "String"
					},
					{
						"name": "Leadership_Years",
						"type": "String"
					},
					{
						"name": "Legal_Infraction",
						"type": "String"
					},
					{
						"name": "Legal_Resident",
						"type": "String"
					},
					{
						"name": "Letter_of_Recommendation_1",
						"type": "String"
					},
					{
						"name": "Marines_Opt_In",
						"type": "String"
					},
					{
						"name": "Nominee",
						"type": "String"
					},
					{
						"name": "Nominee_Relationship",
						"type": "String"
					},
					{
						"name": "Occupation",
						"type": "String"
					},
					{
						"name": "Other_Courses",
						"type": "String"
					},
					{
						"name": "Other_Interests",
						"type": "String"
					},
					{
						"name": "Other_Marines_Relationship_Type",
						"type": "String"
					},
					{
						"name": "Other_Nominee_Relationship",
						"type": "String"
					},
					{
						"name": "Other_Occuptation",
						"type": "String"
					},
					{
						"name": "Other_Sports",
						"type": "String"
					},
					{
						"name": "Phone_Number",
						"type": "String"
					},
					{
						"name": "Poolee_Academy_NROTC",
						"type": "String"
					},
					{
						"name": "Poolee_Academy_NROTC_Delayed_Entry_Program",
						"type": "String"
					},
					{
						"name": "Referral",
						"type": "String"
					},
					{
						"name": "Referral_Other",
						"type": "String"
					},
					{
						"name": "Relationship_to_Marines",
						"type": "String"
					},
					{
						"name": "School_Name",
						"type": "String"
					},
					{
						"name": "School_Community_Leadership",
						"type": "String"
					},
					{
						"name": "SIPRM_Username",
						"type": "String"
					},
					{
						"name": "SLCDA_Referral",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Sports_JV_Varsity",
						"type": "String"
					},
					{
						"name": "Sports_Played",
						"type": "String"
					},
					{
						"name": "Sports_Selector",
						"type": "String"
					},
					{
						"name": "Sports_Years_Played",
						"type": "String"
					},
					{
						"name": "Team_Captain",
						"type": "String"
					},
					{
						"name": "Team_Captain_Describe",
						"type": "String"
					},
					{
						"name": "Visible_Tattoos",
						"type": "String"
					},
					{
						"name": "Volunteer_Hours_Week",
						"type": "String"
					},
					{
						"name": "Volunteer_Selector",
						"type": "String"
					},
					{
						"name": "Volunteer_Work",
						"type": "String"
					},
					{
						"name": "Work_Experience",
						"type": "String"
					},
					{
						"name": "Work_Selector",
						"type": "String"
					},
					{
						"name": "Work_Years",
						"type": "String"
					},
					{
						"name": "DateCreatedUTC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_CMR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecci_unzip_source_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_ECCI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "wk_AssignmentHistory_AITSII.csv",
						"folderPath": "file-aitsi-ecci-etl-20250109.zip",
						"container": "ecci"
					},
					"columnDelimiter": ",",
					"compressionCodec": null,
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "AppicationId",
						"type": "String"
					},
					{
						"name": "PersonId",
						"type": "String"
					},
					{
						"name": "AssignmentType",
						"type": "String"
					},
					{
						"name": "DistrictNumber",
						"type": "String"
					},
					{
						"name": "RecruitingStationNumber",
						"type": "String"
					},
					{
						"name": "RecruitingStationName",
						"type": "String"
					},
					{
						"name": "Aits1BaseLineId",
						"type": "String"
					},
					{
						"name": "DateCreatedUTC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_ECCI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loc_mcrc_unit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_MDML_DMSandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "nvarchar"
					},
					{
						"name": "NAME_FULL",
						"type": "nvarchar"
					},
					{
						"name": "NAME_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "FK_TYPE_ID",
						"type": "nvarchar"
					},
					{
						"name": "FK_PARENT_UNIT_ID",
						"type": "nvarchar"
					},
					{
						"name": "CREATED_BY",
						"type": "nvarchar"
					},
					{
						"name": "CREATED_DATE_TIME",
						"type": "datetime2",
						"scale": 6
					},
					{
						"name": "UPDATED_BY",
						"type": "nvarchar"
					},
					{
						"name": "UPDATED_DATE_TIME",
						"type": "datetime2",
						"scale": 6
					},
					{
						"name": "AITS_BASELINE_ID",
						"type": "varchar"
					},
					{
						"name": "APPIAN_GROUP_ID",
						"type": "nvarchar"
					},
					{
						"name": "IS_ACTIVE",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "loc_mcrc_unit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_MDML_DMSandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage11')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage11_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileStorage1_connectionString')]",
					"fileShare": "devfiles"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CMR_Dest1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CMR_Dest1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_CMR')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_CMR_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_ECCI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_ECCI_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_ECCIV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_ECCIV_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_ECCI_V')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_ECCI_V_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FILE_ECCI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_FILE_ECCI_connectionString')]",
					"fileShare": "thom-fssmb-qa-ecci-eastus"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FILE_ECCIS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_FILE_ECCIS_connectionString')]",
					"fileShare": "thom-fssmb-dev-ecci-eastus"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_File_CMR')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_File_CMR_connectionString')]",
					"fileShare": "thom-fssmb-dev-cmr-eastus"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_File_CMR1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_File_CMR1_connectionString')]",
					"fileShare": "thom-fssmb-dev-cmr-eastus"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Fileshare')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_Fileshare_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_MDML_DEV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_MDML_DEV_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_MDML_DEV_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SystemAssignedManagedIdentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_MDML_DMSandbox')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_MDML_DMSandbox_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VML_BLOB_DEV_MDML_EastUS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('VML_BLOB_DEV_MDML_EastUS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dev_sandbox')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('dev_sandbox_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/jjtest/blobs/file-aitsi-fluidforms-etl",
					"blobPathEndsWith": "zip",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AitsAfterAction')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CMR_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EventReport",
								"type": "DatasetReference"
							},
							"name": "CMR"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AitsAfterAction",
								"type": "DatasetReference"
							},
							"name": "aitsAfterAction",
							"description": "Export data to aitsAddressInfo"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          id as string,",
						"          userId as string,",
						"          eventId as string,",
						"          approverId as string,",
						"          approvalDue as string,",
						"          status as string,",
						"          subStatus as string,",
						"          attendance as string,",
						"          marinesAttendance as string,",
						"          leadCards as string,",
						"          attended as string,",
						"          interviewsScheduled as string,",
						"          recruiter as string,",
						"          electricity as string,",
						"          accommodating as string,",
						"          recommend as string,",
						"          emvAttend as string,",
						"          recommendReason as string,",
						"          deliverable as string,",
						"          description as string,",
						"          objective as string,",
						"          behavior as string,",
						"          awareness as string,",
						"          engagements as string,",
						"          mediaPosts as string,",
						"          mediaImpressions as string,",
						"          socialMediaPosts as string,",
						"          socialMediaImpressions as string,",
						"          qualifiedLeads as string,",
						"          influencerContacts as string,",
						"          followUps as string,",
						"          interaction as string,",
						"          influencerInteraction as string,",
						"          onsiteActivations as string,",
						"          targetMarketRating as string,",
						"          targetMarketComments as string,",
						"          estimatedAttendance as string,",
						"          estimatedTargetAttendance as string,",
						"          comingOfAgeRating as string,",
						"          comingOfAgeComments as string,",
						"          influentialRating as string,",
						"          influentialComments as string,",
						"          communityRelationsRating as string,",
						"          communityRelationsComments as string,",
						"          leadGenerationRating as string,",
						"          leadGenerationComments as string,",
						"          keyParticipants as string,",
						"          problems as string,",
						"          concerns as string,",
						"          comments as string,",
						"          approvedDistrictName as string,",
						"          approvedRecruitingStationName as string,",
						"          approvingUser as string,",
						"          approvingBillet as string,",
						"          approvingLocation as string,",
						"          createdById as string,",
						"          createdByUsername as string,",
						"          updatedById as string,",
						"          updatedByUsername as string,",
						"          createdAt as string,",
						"          updatedAt as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     multiLineRow: true) ~> CMR",
						"CMR derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          problemsOrConcerns as string,",
						"          description as string,",
						"          deliverables as string,",
						"          additionalDeliverables as string,",
						"          personalInNatureDeliverables as string,",
						"          numberOfAttendees as integer,",
						"          numberOfInfluencerContactsGenerated as integer,",
						"          numberOfLeadCardsSubmitted as integer,",
						"          numberOfLeadsThatInteractedWithMarines as integer,",
						"          numberOfOverallInteractions as integer,",
						"          numberOfSocialMediaImpressions as integer,",
						"          numberOfSocialMediaPosts as integer,",
						"          numberOfTraditionalMediaImpressions as integer,",
						"          numberOfTraditionalMediaPosts as integer,",
						"          objective as string,",
						"          ownerBilletGroup as string,",
						"          statusLookup as string,",
						"          subStatusLookup as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          numberOfQualifiedLeadsGenerated as integer,",
						"          aitsBaselineId as string,",
						"          numberOfInfluencersThatInteractedWithMarines as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          statusLookup = status,",
						"          numberOfAttendees = attendance,",
						"          numberOfLeadCardsSubmitted = leadCards,",
						"          deliverables = deliverable,",
						"          description,",
						"          objective,",
						"          numberOfTraditionalMediaPosts = mediaPosts,",
						"          numberOfTraditionalMediaImpressions = mediaImpressions,",
						"          numberOfSocialMediaPosts = socialMediaPosts,",
						"          numberOfSocialMediaImpressions = socialMediaImpressions,",
						"          numberOfQualifiedLeadsGenerated = qualifiedLeads,",
						"          numberOfInfluencerContactsGenerated = influencerContacts,",
						"          numberOfOverallInteractions = interaction,",
						"          numberOfAttendees = estimatedAttendance,",
						"          problemsOrConcerns = problems,",
						"          problemsOrConcerns = concerns,",
						"          createdBy = createdByUsername,",
						"          updatedBy = updatedByUsername,",
						"          createdDateGmt = CreateDate,",
						"          updatedDateGmt = updatedAt",
						"     )) ~> aitsAfterAction"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EventReport')]",
				"[concat(variables('factoryId'), '/datasets/AitsAfterAction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AitsEventContract')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CMR_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CMR_Dest",
								"type": "DatasetReference"
							},
							"name": "CMR"
						},
						{
							"dataset": {
								"referenceName": "AitsMarketingPromotion",
								"type": "DatasetReference"
							},
							"name": "AitsMarketingPromotion"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AitsEventContract",
								"type": "DatasetReference"
							},
							"name": "aitsEventContract",
							"description": "Export data to aitsAddressInfo"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						},
						{
							"name": "JoinMarketingPromotion"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          id as string,",
						"          parentId as string,",
						"          name as string,",
						"          cost as string,",
						"          dateContractedSigned as string,",
						"          eacCode as string,",
						"          approverId as string,",
						"          approvalDue as string,",
						"          regionCode as string,",
						"          districtCode as string,",
						"          recruitingStationCode as string,",
						"          recruitingSubStationCode as string,",
						"          ossCode as string,",
						"          fundingRegionCode as string,",
						"          fundingDistrictCode as string,",
						"          fundingRecruitingStationCode as string,",
						"          fundingRecruitingSubStationCode as string,",
						"          fundingOssCode as string,",
						"          qualifiedName as string,",
						"          sourceCode as string,",
						"          fiscalYear as string,",
						"          city as string,",
						"          state as string,",
						"          startDate as string,",
						"          endDate as string,",
						"          customCategory as string,",
						"          type as string,",
						"          status as string,",
						"          subStatus as string,",
						"          isFromPr as string,",
						"          isFromEac as string,",
						"          contract as string,",
						"          schoolName as string,",
						"          raoUsername as string,",
						"          rejectComments as string,",
						"          approvedDistrictName as string,",
						"          approvedRecruitingStationName as string,",
						"          approvedRecruitingSubStationName as string,",
						"          approvingUser as string,",
						"          approvingBillet as string,",
						"          approvingLocation as string,",
						"          purpose as string,",
						"          estAttendance as string,",
						"          behavior as string,",
						"          awareness as string,",
						"          estEngagements as string,",
						"          estMediaPosts as string,",
						"          estMediaImpressions as string,",
						"          estSocialMediaPosts as string,",
						"          estSocialMediaImpressions as string,",
						"          estQualifiedLeads as string,",
						"          estInfluencerContacts as string,",
						"          estFollowUps as string,",
						"          estInteraction as string,",
						"          estInfluencerInteraction as string,",
						"          estOnsiteActivations as string,",
						"          deliverable as string,",
						"          addlDeliverables as string,",
						"          recommend as string,",
						"          emvAttend as string,",
						"          recommendReason as string,",
						"          assignedBy as string,",
						"          oldCategory as string,",
						"          oldEventId as string,",
						"          createdById as string,",
						"          createdByUsername as string,",
						"          updatedById as string,",
						"          updatedByUsername as string,",
						"          createdAt as string,",
						"          updatedAt as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     multiLineRow: true) ~> CMR",
						"source(output(",
						"          id as string,",
						"          aitsBaselineId as string,",
						"          fk_marketingCampaignId as string,",
						"          name as string,",
						"          statusLookup as string,",
						"          startDateGmt as date,",
						"          endDateGmt as date,",
						"          isRecurrence as integer,",
						"          isWebFacing as integer,",
						"          submitter as string,",
						"          submitterFormatted as string,",
						"          submittedDateGmt as timestamp,",
						"          shortDescription as string,",
						"          detailedDescription as string,",
						"          landingPageUriAfterPromo as string,",
						"          landingPageUriDuringPromo as string,",
						"          fk_reviewId as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> AitsMarketingPromotion",
						"JoinMarketingPromotion derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"CMR, AitsMarketingPromotion join(CMR@id == aitsBaselineId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinMarketingPromotion",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          name as string,",
						"          systemGeneratedName as string,",
						"          selfReportedOtherCategory as string,",
						"          purpose as string,",
						"          EVENT_TYPE as string,",
						"          cost as double,",
						"          LOCATION_NAME as string,",
						"          STREET_ADDRESS1 as string,",
						"          STREET_ADDRESS2 as string,",
						"          city as string,",
						"          stateLookup as string,",
						"          zipCode as string,",
						"          fk_fiscalYearId as string,",
						"          fk_afteractionId as string,",
						"          fk_fundingMcrcUnitId as integer,",
						"          fk_purchaseRequestId as string,",
						"          fk_parentEventContractId as string,",
						"          fk_proposalFileId as string,",
						"          fk_promotionId as string,",
						"          assignedOwner as string,",
						"          statusLookup as string,",
						"          subStatusLookup as string,",
						"          dateContractSigned as timestamp,",
						"          deliverables as string,",
						"          additionalDeliverables as string,",
						"          personalInNatureDeliverables as string,",
						"          estimatedAttendence as integer,",
						"          estimatedNumberOfInfluencerContacts as integer,",
						"          estimatedNumberOfLeads as integer,",
						"          estimatedNumberOfOverallInteractions as integer,",
						"          estimatedNumberOfSocialMediaImpressions as integer,",
						"          estimatedNumberOfSocialMediaPosts as integer,",
						"          estimatedNumberOfTraditionalMediaPosts as integer,",
						"          estimatedNumberOfTraditionalImpressions as integer,",
						"          numberOfContractedOnSiteActivations as integer,",
						"          hasPersonalInNatureDeliverables as integer,",
						"          isContracted as integer,",
						"          isFree as integer,",
						"          hheac as string,",
						"          submitter as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          fk_proposalId as string,",
						"          hasParentContract as integer,",
						"          startDateGmt as timestamp,",
						"          endDateGmt as timestamp,",
						"          usesHandheld as integer,",
						"          isforInfluencers as integer,",
						"          includesBattlePosition as integer,",
						"          fk_McrcUnitId as integer,",
						"          aitsBaselineId as string,",
						"          FK_LOC_UNIT_ID as string,",
						"          rmiFields as string,",
						"          rmiQuestions as string,",
						"          FK_ASSIGNED_OWNER_LOC_UNIT_ID as string,",
						"          assignedDate as timestamp,",
						"          dueDate as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = guid,",
						"          aitsBaselineId = parentId,",
						"          deliverables = deliverable,",
						"          additionalDeliverables = addlDeliverables,",
						"          dateContractSigned = dateContractedSigned,",
						"          name,",
						"          cost,",
						"          hheac = eacCode,",
						"          startDateGmt = startDate,",
						"          city,",
						"          endDateGmt = endDate,",
						"          statusLookup = status,",
						"          subStatusLookup = subStatus,",
						"          systemGeneratedName = qualifiedName,",
						"          stateLookup = state,",
						"          selfReportedOtherCategory = customCategory,",
						"          purpose,",
						"          estimatedAttendence = estAttendance,",
						"          estimatedNumberOfTraditionalMediaPosts = estMediaPosts,",
						"          estimatedNumberOfTraditionalImpressions = estMediaImpressions,",
						"          estimatedNumberOfSocialMediaPosts = estSocialMediaPosts,",
						"          estimatedNumberOfSocialMediaImpressions = estSocialMediaImpressions,",
						"          estimatedNumberOfLeads = estQualifiedLeads,",
						"          estimatedNumberOfInfluencerContacts = estInfluencerContacts,",
						"          estimatedNumberOfOverallInteractions = estInteraction,",
						"          createdBy = createdByUsername,",
						"          updatedBy = updatedByUsername,",
						"          createdDateGmt = createdAt,",
						"          updatedDateGmt = updatedAt,",
						"          fk_promotionId = AitsMarketingPromotion@id",
						"     )) ~> aitsEventContract"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CMR_Dest')]",
				"[concat(variables('factoryId'), '/datasets/AitsMarketingPromotion')]",
				"[concat(variables('factoryId'), '/datasets/AitsEventContract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_EcciInfluencerAssignmentHistory')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source_1",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						},
						{
							"dataset": {
								"referenceName": "loc_mcrc_unit",
								"type": "DatasetReference"
							},
							"name": "LocMcrcUnit"
						},
						{
							"dataset": {
								"referenceName": "aits_Influencer",
								"type": "DatasetReference"
							},
							"name": "AitsInfluencer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "EcciInfluencerAssignmentHistory",
								"type": "DatasetReference"
							},
							"name": "EcciInfluencerAssignmentHistory",
							"description": "Export data to aitsInfluencerEventReference"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          id as string,",
						"          Id as string,",
						"          AppicationId as string,",
						"          PersonId as string,",
						"          AssignmentType as string,",
						"          DistrictNumber as string,",
						"          RecruitingStationNumber as string,",
						"          RecruitingStationName as string,",
						"          Aits1BaseLineId as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"source(output(",
						"          ID as string,",
						"          NAME_FULL as string,",
						"          NAME_SHORT as string,",
						"          FK_TYPE_ID as string,",
						"          FK_PARENT_UNIT_ID as string,",
						"          CREATED_BY as string,",
						"          CREATED_DATE_TIME as timestamp,",
						"          UPDATED_BY as string,",
						"          UPDATED_DATE_TIME as timestamp,",
						"          AITS_BASELINE_ID as string,",
						"          APPIAN_GROUP_ID as string,",
						"          IS_ACTIVE as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> LocMcrcUnit",
						"source(output(",
						"          id as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          hash as string,",
						"          fk_personId as string,",
						"          occupation as string,",
						"          occupationOther as string,",
						"          type as string,",
						"          interests as string,",
						"          interestsOtherValue as string,",
						"          referallSource as string,",
						"          referallSourceOther as string,",
						"          relationToUsmc as string,",
						"          relationToUsmcOther as string,",
						"          collegeAttended as string,",
						"          organizationAffiliations as string,",
						"          mostRecentAssignedBilletGroup as string,",
						"          mostRecentAssignmentMethod as string,",
						"          mostRecentAssignmentComments as string,",
						"          mostRecentSource as string,",
						"          mostRecentStatus as string,",
						"          mostRecentStatusReason as string,",
						"          mostRecentStatusDateGmt as timestamp,",
						"          profileCompletedDateGmt as timestamp,",
						"          firstEmailDateGmt as timestamp,",
						"          fiveDayEmailDateGmt as timestamp,",
						"          tenDayEmailDateGmt as timestamp,",
						"          reassignmentCount as integer,",
						"          pendingArchiveEmailDateGmt as timestamp,",
						"          fk_educationId as string,",
						"          mostRecentAssignmentDateGmt as timestamp,",
						"          homeTownCity as string,",
						"          homeTownState as string,",
						"          doNotContact as boolean,",
						"          aitsBaselineId as string,",
						"          FK_LOC_UNIT_ID as string,",
						"          RANK as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> AitsInfluencer",
						"join2 derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"ECCI, LocMcrcUnit join(Aits1BaseLineId == AITS_BASELINE_ID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1, AitsInfluencer join(PersonId == aitsBaselineId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          FK_INFLUENCER_ID as string,",
						"          FK_LOC_UNIT_ID as string,",
						"          CREATED_BY as string,",
						"          CREATED_ON as timestamp,",
						"          UPDATED_BY as string,",
						"          UPDATED_ON as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID = ECCI@id,",
						"          FK_INFLUENCER_ID = aitsBaselineId,",
						"          FK_LOC_UNIT_ID = AITS_BASELINE_ID,",
						"          CREATED_BY = CreatedBy,",
						"          CREATED_ON = CreateDate",
						"     )) ~> EcciInfluencerAssignmentHistory"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source_1')]",
				"[concat(variables('factoryId'), '/datasets/loc_mcrc_unit')]",
				"[concat(variables('factoryId'), '/datasets/aits_Influencer')]",
				"[concat(variables('factoryId'), '/datasets/EcciInfluencerAssignmentHistory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsAddressInfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aitsAddressInfo",
								"type": "DatasetReference"
							},
							"name": "aitsAddressInfo",
							"description": "Export data to aitsAddressInfo"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          addressLine1 as string,",
						"          addressLine2 as string,",
						"          addressLine3 as string,",
						"          archivedDate as date,",
						"          city as string,",
						"          county as string,",
						"          isArchived as integer,",
						"          isPrimary as integer,",
						"          latitude as string,",
						"          longitude as string,",
						"          optedOut as integer,",
						"          optedOutDate as date,",
						"          stateLookup as string,",
						"          statusLookup as string,",
						"          statusDate as date,",
						"          statusReason as string,",
						"          typeLookup as string,",
						"          zipCode as string,",
						"          zipRoute as string,",
						"          createdBy as string,",
						"          createdDateGMT as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGMT as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = guid,",
						"          addressLine1 = Address_Street,",
						"          addressLine2 = Address_Apt_Unit,",
						"          city = Address_City,",
						"          stateLookup = Address_State,",
						"          zipCode = Address_Zip,",
						"          createdDateGMT = CreateDate,",
						"          createdBy = CreatedBy,",
						"          aitsBaselineId = PersonId",
						"     )) ~> aitsAddressInfo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aitsAddressInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aitsContactEmailInfo",
								"type": "DatasetReference"
							},
							"name": "aitsContactEmailInfo"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          address as string,",
						"          statusLookup as string,",
						"          statusReason as string,",
						"          typeLookup as string,",
						"          validationDate as date,",
						"          optedOutDate as date,",
						"          optedOut as integer,",
						"          isPrimary as integer,",
						"          isArchived as integer,",
						"          distributionCode as string,",
						"          archivedDate as date,",
						"          statusDate as date,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = guid,",
						"          address = Email,",
						"          optedOut = Email_list_opt_out,",
						"          createdDateGmt = CreateDate,",
						"          createdBy = CreatedBy,",
						"          aitsBaselineId = PersonId",
						"     )) ~> aitsContactEmailInfo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aitsContactEmailInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsContactPhoneInfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aitsContactPhoneInfo",
								"type": "DatasetReference"
							},
							"name": "aitsContactPhoneInfo"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          archivedDate as date,",
						"          countryCode as string,",
						"          extension as string,",
						"          isArchived as integer,",
						"          isPrimary as integer,",
						"          optedOut as integer,",
						"          optedOutDate as date,",
						"          typeLookup as string,",
						"          validationDate as date,",
						"          number as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = guid,",
						"          number = Phone_Number,",
						"          createdDateGmt = CreateDate,",
						"          createdBy = CreatedBy,",
						"          aitsBaselineId = PersonId",
						"     )) ~> aitsContactPhoneInfo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aitsContactPhoneInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsInfluencer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aits_Influencer",
								"type": "DatasetReference"
							},
							"name": "aitsInfluencer"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          hash as string,",
						"          fk_personId as string,",
						"          occupation as string,",
						"          occupationOther as string,",
						"          type as string,",
						"          interests as string,",
						"          interestsOtherValue as string,",
						"          referallSource as string,",
						"          referallSourceOther as string,",
						"          relationToUsmc as string,",
						"          relationToUsmcOther as string,",
						"          collegeAttended as string,",
						"          organizationAffiliations as string,",
						"          mostRecentAssignedBilletGroup as string,",
						"          mostRecentAssignmentMethod as string,",
						"          mostRecentAssignmentComments as string,",
						"          mostRecentSource as string,",
						"          mostRecentStatus as string,",
						"          mostRecentStatusReason as string,",
						"          mostRecentStatusDateGmt as timestamp,",
						"          profileCompletedDateGmt as timestamp,",
						"          firstEmailDateGmt as timestamp,",
						"          fiveDayEmailDateGmt as timestamp,",
						"          tenDayEmailDateGmt as timestamp,",
						"          reassignmentCount as integer,",
						"          pendingArchiveEmailDateGmt as timestamp,",
						"          fk_educationId as string,",
						"          mostRecentAssignmentDateGmt as timestamp,",
						"          homeTownCity as string,",
						"          homeTownState as string,",
						"          doNotContact as boolean,",
						"          aitsBaselineId as string,",
						"          FK_LOC_UNIT_ID as string,",
						"          RANK as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = ContainerId,",
						"          createdBy = CreatedBy,",
						"          createdDateGmt = CreateDate,",
						"          aitsBaselineId = PersonId,",
						"          occupation = Occupation,",
						"          occupationOther = Other_Occuptation,",
						"          interests = Interests,",
						"          interestsOtherValue = Other_Interests,",
						"          referallSource = Referral,",
						"          referallSourceOther = Referral_Other,",
						"          relationToUsmc = Relationship_to_Marines,",
						"          relationToUsmcOther = Other_Marines_Relationship_Type,",
						"          homeTownState = Hometown_State,",
						"          homeTownCity = Hometown_City,",
						"          doNotContact = Do_Not_Contact,",
						"          collegeAttended = College,",
						"          interestsOtherValue = Sports_Played",
						"     )) ~> aitsInfluencer"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aits_Influencer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsInfluencerEventReference')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aitsInfluencerEventReference",
								"type": "DatasetReference"
							},
							"name": "aitsInfluencerEventReference",
							"description": "Export data to aitsInfluencerEventReference"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          InfluencerEventId as string,",
						"          ApplicationId as string,",
						"          EventId as string,",
						"          IsActive as string,",
						"          CreatedById as string,",
						"          DateCreatedUTC as string,",
						"          DateUpdatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          fk_influencerId as string,",
						"          fk_eventContract as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['fk_influencerId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = guid,",
						"          fk_influencerId = ApplicationId,",
						"          fk_eventContract = InfluencerEventId,",
						"          createdBy = CreatedBy,",
						"          createdDateGmt = CreateDate",
						"     )) ~> aitsInfluencerEventReference"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aitsInfluencerEventReference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPerson')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aits_Person",
								"type": "DatasetReference"
							},
							"name": "aitsPerson"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          mcrissEthnicCategory as string,",
						"          mcrissGender as string,",
						"          genderIsInferred as boolean,",
						"          mcrissRace as string,",
						"          mcrisRaceOtherDetail as string,",
						"          age as integer,",
						"          yearOfBirth as integer,",
						"          monthOfBirth as integer,",
						"          namePrefix as string,",
						"          firstName as string,",
						"          lastName as string,",
						"          middleName as string,",
						"          nameSuffix as string,",
						"          mostRecentFulfillmentItem as string,",
						"          mostRecentAttributedPromotion as string,",
						"          mostRecentAssignment as string,",
						"          mcrissId as string,",
						"          mcrissAcceptance as string,",
						"          environmentOfRecord as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          fk_locMcrcSchoolId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = PersonId,",
						"          mcrissGender = Gender,",
						"          mcrissEthnicCategory = Ethnicity,",
						"          mcrissRace = Ethnicity,",
						"          firstName = First_Name,",
						"          lastName = Last_Name,",
						"          monthOfBirth = Date_of_Birth_Month,",
						"          yearOfBirth = Date_of_Birth_Year,",
						"          createdBy = CreatedBy,",
						"          createdDateGmt = CreateDate",
						"     )) ~> aitsPerson"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aits_Person')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPersonContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aitsPersonContactEmailInfo",
								"type": "DatasetReference"
							},
							"name": "aitsPersonContactEmailInfo"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          fk_contactEmailInfoId as string,",
						"          fk_personId as string,",
						"          createdDateGmt as timestamp,",
						"          createdBy as string,",
						"          updatedDateGmt as timestamp,",
						"          updatedBy as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['fk_personId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = guid,",
						"          fk_personId = PersonId,",
						"          createdDateGmt = CreateDate,",
						"          createdBy = CreatedBy",
						"     )) ~> aitsPersonContactEmailInfo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aitsPersonContactEmailInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/THOM_DataFlow_DEV_ECCI2MDML_EastUS_aitsPersonContactPhoneInfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecci_unzip_source",
								"type": "DatasetReference"
							},
							"name": "ECCI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aitsPersonContactPhoneInfo",
								"type": "DatasetReference"
							},
							"name": "aitsPersonContactPhoneInfo"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string ('AzurePipeline')",
						"}",
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ECCI",
						"ECCI derive(guid = uuid(),",
						"          CreateDate = currentTimestamp(),",
						"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
						"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          fk_personId as string,",
						"          fk_contactPhoneInfoId as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['fk_personId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = guid,",
						"          fk_personId = PersonId,",
						"          createdBy = CreatedBy,",
						"          createdDateGmt = CreateDate",
						"     )) ~> aitsPersonContactPhoneInfo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecci_unzip_source')]",
				"[concat(variables('factoryId'), '/datasets/aitsPersonContactPhoneInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsInfluencerEventReference')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_InfluencerEvent",
								"type": "DatasetReference"
							},
							"name": "aitscontactphoneinfo1"
						},
						{
							"dataset": {
								"referenceName": "DS_aitsInfluencerEventReference",
								"type": "DatasetReference"
							},
							"name": "aitsinfluncereventreference"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_aitsInfluencerEventReference",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfon"
						}
					],
					"transformations": [
						{
							"name": "GUID"
						},
						{
							"name": "IDLK"
						},
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          InfluencerEventId as string,",
						"          ApplicationId as string,",
						"          EventId as string,",
						"          IsActive as string,",
						"          CreatedById as string,",
						"          DateCreatedUTC as string,",
						"          DateUpdatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> aitscontactphoneinfo1",
						"source(output(",
						"          id as string,",
						"          fk_influencerId as string,",
						"          fk_eventContract as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitsinfluncereventreference",
						"aitscontactphoneinfo1 derive(GUID = uuid()) ~> GUID",
						"GUID, aitsinfluncereventreference exists(GUID == id,",
						"     negate:true,",
						"     broadcast: 'both')~> IDLK",
						"IDLK, aitsinfluncereventreference lookup(InfluencerEventId == fk_influencerId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGmt),currentTimestamp(),createdDateGmt),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          fk_influencerId as string,",
						"          fk_eventContract as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['fk_influencerId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = GUID,",
						"          fk_influencerId = EventId,",
						"          fk_eventContract,",
						"          createdBy,",
						"          createdDateGmt = DrivedDate@createdDateGMT",
						"     )) ~> aitscontactemailinfon"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_InfluencerEvent')]",
				"[concat(variables('factoryId'), '/datasets/DS_aitsInfluencerEventReference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsInfluncer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_wk_ContainerData_Flattened",
								"type": "DatasetReference"
							},
							"name": "aitscontactphoneinfo1"
						},
						{
							"dataset": {
								"referenceName": "DS_aitsinfluencer",
								"type": "DatasetReference"
							},
							"name": "aitscontactphoneinfo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_aitsinfluencer",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfon"
						}
					],
					"transformations": [
						{
							"name": "GUID"
						},
						{
							"name": "IDLK"
						},
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> aitscontactphoneinfo1",
						"source(output(",
						"          id as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          hash as string,",
						"          fk_personId as string,",
						"          occupation as string,",
						"          occupationOther as string,",
						"          type as string,",
						"          interests as string,",
						"          interestsOtherValue as string,",
						"          referallSource as string,",
						"          referallSourceOther as string,",
						"          relationToUsmc as string,",
						"          relationToUsmcOther as string,",
						"          collegeAttended as string,",
						"          organizationAffiliations as string,",
						"          mostRecentAssignedBilletGroup as string,",
						"          mostRecentAssignmentMethod as string,",
						"          mostRecentAssignmentComments as string,",
						"          mostRecentSource as string,",
						"          mostRecentStatus as string,",
						"          mostRecentStatusReason as string,",
						"          mostRecentStatusDateGmt as timestamp,",
						"          profileCompletedDateGmt as timestamp,",
						"          firstEmailDateGmt as timestamp,",
						"          fiveDayEmailDateGmt as timestamp,",
						"          tenDayEmailDateGmt as timestamp,",
						"          reassignmentCount as integer,",
						"          pendingArchiveEmailDateGmt as timestamp,",
						"          fk_educationId as string,",
						"          mostRecentAssignmentDateGmt as timestamp,",
						"          homeTownCity as string,",
						"          homeTownState as string,",
						"          doNotContact as boolean,",
						"          aitsBaselineId as string,",
						"          FK_LOC_UNIT_ID as string,",
						"          RANK as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitscontactphoneinfo",
						"aitscontactphoneinfo1 derive(GUID = uuid()) ~> GUID",
						"GUID, aitscontactphoneinfo exists(GUID == id,",
						"     negate:true,",
						"     broadcast: 'both')~> IDLK",
						"IDLK, aitscontactphoneinfo lookup(PersonId == aitsBaselineId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGmt),currentTimestamp(),createdDateGmt),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          hash as string,",
						"          fk_personId as string,",
						"          occupation as string,",
						"          occupationOther as string,",
						"          type as string,",
						"          interests as string,",
						"          interestsOtherValue as string,",
						"          referallSource as string,",
						"          referallSourceOther as string,",
						"          relationToUsmc as string,",
						"          relationToUsmcOther as string,",
						"          collegeAttended as string,",
						"          organizationAffiliations as string,",
						"          mostRecentAssignedBilletGroup as string,",
						"          mostRecentAssignmentMethod as string,",
						"          mostRecentAssignmentComments as string,",
						"          mostRecentSource as string,",
						"          mostRecentStatus as string,",
						"          mostRecentStatusReason as string,",
						"          mostRecentStatusDateGmt as timestamp,",
						"          profileCompletedDateGmt as timestamp,",
						"          firstEmailDateGmt as timestamp,",
						"          fiveDayEmailDateGmt as timestamp,",
						"          tenDayEmailDateGmt as timestamp,",
						"          reassignmentCount as integer,",
						"          pendingArchiveEmailDateGmt as timestamp,",
						"          fk_educationId as string,",
						"          mostRecentAssignmentDateGmt as timestamp,",
						"          homeTownCity as string,",
						"          homeTownState as string,",
						"          doNotContact as boolean,",
						"          aitsBaselineId as string,",
						"          FK_LOC_UNIT_ID as string,",
						"          RANK as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = PersonId,",
						"          createdBy = PersonId,",
						"          createdDateGmt = PersonId,",
						"          updatedBy = PersonId,",
						"          hash = PersonId,",
						"          fk_personId = PersonId,",
						"          occupation = PersonId,",
						"          occupationOther = PersonId,",
						"          type = PersonId,",
						"          interests = PersonId,",
						"          interestsOtherValue = PersonId,",
						"          referallSource = PersonId,",
						"          referallSourceOther = PersonId,",
						"          relationToUsmc = PersonId,",
						"          relationToUsmcOther = PersonId,",
						"          collegeAttended = PersonId,",
						"          organizationAffiliations = PersonId,",
						"          mostRecentAssignedBilletGroup = PersonId,",
						"          mostRecentAssignmentMethod = PersonId,",
						"          mostRecentSource = PersonId,",
						"          mostRecentStatus = PersonId,",
						"          mostRecentStatusReason = PersonId,",
						"          mostRecentStatusDateGmt = PersonId,",
						"          profileCompletedDateGmt = PersonId,",
						"          firstEmailDateGmt = PersonId,",
						"          fiveDayEmailDateGmt = PersonId,",
						"          tenDayEmailDateGmt = PersonId,",
						"          reassignmentCount = PersonId,",
						"          pendingArchiveEmailDateGmt = PersonId,",
						"          fk_educationId = PersonId,",
						"          mostRecentAssignmentDateGmt = PersonId,",
						"          homeTownCity = PersonId,",
						"          homeTownState = PersonId,",
						"          doNotContact = PersonId,",
						"          aitsBaselineId = PersonId,",
						"          each(match(/* All input columns */true()),",
						"               /* Input name */$$ = $$)",
						"     )) ~> aitscontactemailinfon"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_wk_ContainerData_Flattened')]",
				"[concat(variables('factoryId'), '/datasets/DS_aitsinfluencer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsPerson')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_wk_ContainerData_Flattened",
								"type": "DatasetReference"
							},
							"name": "DSwkContainerData",
							"description": "Import data from DS_wk_C"
						},
						{
							"dataset": {
								"referenceName": "DS_aitsPerson",
								"type": "DatasetReference"
							},
							"name": "aitperson"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_aitsPerson",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfon"
						}
					],
					"transformations": [
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DSwkContainerData",
						"source(output(",
						"          id as string,",
						"          mcrissEthnicCategory as string,",
						"          mcrissGender as string,",
						"          genderIsInferred as boolean,",
						"          mcrissRace as string,",
						"          mcrisRaceOtherDetail as string,",
						"          age as integer,",
						"          yearOfBirth as integer,",
						"          monthOfBirth as integer,",
						"          namePrefix as string,",
						"          firstName as string,",
						"          lastName as string,",
						"          middleName as string,",
						"          nameSuffix as string,",
						"          mostRecentFulfillmentItem as string,",
						"          mostRecentAttributedPromotion as string,",
						"          mostRecentAssignment as string,",
						"          mcrissId as string,",
						"          mcrissAcceptance as string,",
						"          environmentOfRecord as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          fk_locMcrcSchoolId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitperson",
						"DSwkContainerData, aitperson lookup(PersonId == id,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGmt),currentTimestamp(),createdDateGmt),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          mcrissEthnicCategory as string,",
						"          mcrissGender as string,",
						"          genderIsInferred as boolean,",
						"          mcrissRace as string,",
						"          mcrisRaceOtherDetail as string,",
						"          age as integer,",
						"          yearOfBirth as integer,",
						"          monthOfBirth as integer,",
						"          namePrefix as string,",
						"          firstName as string,",
						"          lastName as string,",
						"          middleName as string,",
						"          nameSuffix as string,",
						"          mostRecentFulfillmentItem as string,",
						"          mostRecentAttributedPromotion as string,",
						"          mostRecentAssignment as string,",
						"          mcrissId as string,",
						"          mcrissAcceptance as string,",
						"          environmentOfRecord as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          fk_locMcrcSchoolId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = PersonId,",
						"          mcrissEthnicCategory,",
						"          mcrissGender = Gender,",
						"          mcrissRace = Ethnicity,",
						"          mcrisRaceOtherDetail,",
						"          yearOfBirth,",
						"          monthOfBirth = Date_of_Birth_Month,",
						"          firstName = First_Name,",
						"          lastName = Last_Name,",
						"          createdBy,",
						"          createdDateGmt = aitperson@createdDateGmt,",
						"          updatedBy,",
						"          updatedDateGmt = aitperson@updatedDateGmt,",
						"          each(match(/* All input columns */true()),",
						"               /* Input name */$$ = $$)",
						"     )) ~> aitscontactemailinfon"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_wk_ContainerData_Flattened')]",
				"[concat(variables('factoryId'), '/datasets/DS_aitsPerson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsPersonContactEmailInfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_wk_ContainerData_Flattened",
								"type": "DatasetReference"
							},
							"name": "aitsPersonContactEmailInfo"
						},
						{
							"dataset": {
								"referenceName": "DS_aitsPersonContactEmailInfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactphoneinfo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_aitsPersonContactEmailInfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfon"
						}
					],
					"transformations": [
						{
							"name": "GUID"
						},
						{
							"name": "IDLK"
						},
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> aitsPersonContactEmailInfo",
						"source(output(",
						"          id as string,",
						"          fk_contactEmailInfoId as string,",
						"          fk_personId as string,",
						"          createdDateGmt as timestamp,",
						"          createdBy as string,",
						"          updatedDateGmt as timestamp,",
						"          updatedBy as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitscontactphoneinfo",
						"aitsPersonContactEmailInfo derive(GUID = uuid()) ~> GUID",
						"GUID, aitscontactphoneinfo exists(GUID == id,",
						"     negate:true,",
						"     broadcast: 'both')~> IDLK",
						"IDLK, aitscontactphoneinfo lookup(PersonId == fk_personId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGmt),currentTimestamp(),createdDateGmt),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          fk_contactEmailInfoId as string,",
						"          fk_personId as string,",
						"          createdDateGmt as timestamp,",
						"          createdBy as string,",
						"          updatedDateGmt as timestamp,",
						"          updatedBy as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = GUID,",
						"          fk_personId = PersonId,",
						"          createdDateGmt = aitscontactphoneinfo@createdDateGmt,",
						"          createdBy,",
						"          updatedDateGmt = aitscontactphoneinfo@updatedDateGmt,",
						"          updatedBy,",
						"          each(match(/* All input columns */true()),",
						"               /* Input name */$$ = $$)",
						"     )) ~> aitscontactemailinfon"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_wk_ContainerData_Flattened')]",
				"[concat(variables('factoryId'), '/datasets/DS_aitsPersonContactEmailInfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitsaddressinfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_wk_ContainerData_Flattened",
								"type": "DatasetReference"
							},
							"name": "addressinfo"
						},
						{
							"dataset": {
								"referenceName": "DS_aitsaddressinfo",
								"type": "DatasetReference"
							},
							"name": "aitsAddressinformation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_aitsaddressinfo",
								"type": "DatasetReference"
							},
							"name": "aitsaddressinfo"
						}
					],
					"transformations": [
						{
							"name": "GUID"
						},
						{
							"name": "IDLK"
						},
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> addressinfo",
						"source(output(",
						"          id as string,",
						"          addressLine1 as string,",
						"          addressLine2 as string,",
						"          addressLine3 as string,",
						"          archivedDate as date,",
						"          city as string,",
						"          county as string,",
						"          isArchived as integer,",
						"          isPrimary as integer,",
						"          latitude as string,",
						"          longitude as string,",
						"          optedOut as integer,",
						"          optedOutDate as date,",
						"          stateLookup as string,",
						"          statusLookup as string,",
						"          statusDate as date,",
						"          statusReason as string,",
						"          typeLookup as string,",
						"          zipCode as string,",
						"          zipRoute as string,",
						"          createdBy as string,",
						"          createdDateGMT as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGMT as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitsAddressinformation",
						"addressinfo derive(GUID = uuid()) ~> GUID",
						"GUID, aitsAddressinformation exists(GUID == id,",
						"     negate:true,",
						"     broadcast: 'both')~> IDLK",
						"IDLK, aitsAddressinformation lookup(PersonId == aitsBaselineId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGMT),currentTimestamp(),createdDateGMT),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          addressLine1 as string,",
						"          addressLine2 as string,",
						"          addressLine3 as string,",
						"          archivedDate as date,",
						"          city as string,",
						"          county as string,",
						"          isArchived as integer,",
						"          isPrimary as integer,",
						"          latitude as string,",
						"          longitude as string,",
						"          optedOut as integer,",
						"          optedOutDate as date,",
						"          stateLookup as string,",
						"          statusLookup as string,",
						"          statusDate as date,",
						"          statusReason as string,",
						"          typeLookup as string,",
						"          zipCode as string,",
						"          zipRoute as string,",
						"          createdBy as string,",
						"          createdDateGMT as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGMT as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = GUID,",
						"          addressLine1 = Address_Street,",
						"          addressLine2 = Address_Apt_Unit,",
						"          city = Address_City,",
						"          stateLookup = Address_State,",
						"          zipCode = Address_Zip,",
						"          createdBy,",
						"          createdDateGMT,",
						"          updatedBy,",
						"          updatedDateGMT,",
						"          aitsBaselineId = PersonId",
						"     )) ~> aitsaddressinfo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_wk_ContainerData_Flattened')]",
				"[concat(variables('factoryId'), '/datasets/DS_aitsaddressinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitscontactemailinfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_wk_ContainerData_Flattened",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfo"
						},
						{
							"dataset": {
								"referenceName": "DS_aitscontactemailinfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_aitscontactemailinfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfon"
						}
					],
					"transformations": [
						{
							"name": "GUID"
						},
						{
							"name": "IDLK"
						},
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> aitscontactemailinfo",
						"source(output(",
						"          id as string,",
						"          address as string,",
						"          statusLookup as string,",
						"          statusReason as string,",
						"          typeLookup as string,",
						"          validationDate as date,",
						"          optedOutDate as date,",
						"          optedOut as integer,",
						"          isPrimary as integer,",
						"          isArchived as integer,",
						"          distributionCode as string,",
						"          archivedDate as date,",
						"          statusDate as date,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitscontactemailinfos",
						"aitscontactemailinfo derive(GUID = uuid()) ~> GUID",
						"GUID, aitscontactemailinfos exists(GUID == id,",
						"     negate:true,",
						"     broadcast: 'both')~> IDLK",
						"IDLK, aitscontactemailinfos lookup(PersonId == aitsBaselineId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGmt),currentTimestamp(),createdDateGmt),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          address as string,",
						"          statusLookup as string,",
						"          statusReason as string,",
						"          typeLookup as string,",
						"          validationDate as date,",
						"          optedOutDate as date,",
						"          optedOut as integer,",
						"          isPrimary as integer,",
						"          isArchived as integer,",
						"          distributionCode as string,",
						"          archivedDate as date,",
						"          statusDate as date,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = GUID,",
						"          address = Email,",
						"          optedOut = Email_list_opt_out,",
						"          createdBy,",
						"          createdDateGmt = aitscontactemailinfos@createdDateGmt,",
						"          updatedBy,",
						"          updatedDateGmt = aitscontactemailinfos@updatedDateGmt,",
						"          aitsBaselineId = PersonId,",
						"          each(match(/* All input columns */true()),",
						"               /* Input name */$$ = $$)",
						"     )) ~> aitscontactemailinfon"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_wk_ContainerData_Flattened')]",
				"[concat(variables('factoryId'), '/datasets/DS_aitscontactemailinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitscontactphoneinfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_wk_ContainerData_Flattened",
								"type": "DatasetReference"
							},
							"name": "aitscontactphoneinfo1"
						},
						{
							"dataset": {
								"referenceName": "DS_aitscontactphoneinfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactphoneinfo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_aitscontactphoneinfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfon"
						}
					],
					"transformations": [
						{
							"name": "GUID"
						},
						{
							"name": "IDLK"
						},
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> aitscontactphoneinfo1",
						"source(output(",
						"          id as string,",
						"          archivedDate as date,",
						"          countryCode as string,",
						"          extension as string,",
						"          isArchived as integer,",
						"          isPrimary as integer,",
						"          optedOut as integer,",
						"          optedOutDate as date,",
						"          typeLookup as string,",
						"          validationDate as date,",
						"          number as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitscontactphoneinfo",
						"aitscontactphoneinfo1 derive(GUID = uuid()) ~> GUID",
						"GUID, aitscontactphoneinfo exists(GUID == id,",
						"     negate:true,",
						"     broadcast: 'both')~> IDLK",
						"IDLK, aitscontactphoneinfo lookup(PersonId == aitsBaselineId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGmt),currentTimestamp(),createdDateGmt),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          archivedDate as date,",
						"          countryCode as string,",
						"          extension as string,",
						"          isArchived as integer,",
						"          isPrimary as integer,",
						"          optedOut as integer,",
						"          optedOutDate as date,",
						"          typeLookup as string,",
						"          validationDate as date,",
						"          number as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp,",
						"          aitsBaselineId as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['aitsBaselineId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = GUID,",
						"          number = Phone_Number,",
						"          createdBy,",
						"          createdDateGmt = aitscontactphoneinfo@createdDateGmt,",
						"          updatedBy,",
						"          updatedDateGmt = aitscontactphoneinfo@updatedDateGmt,",
						"          aitsBaselineId = PersonId,",
						"          each(match(/* All input columns */true()),",
						"               /* Input name */$$ = $$)",
						"     )) ~> aitscontactemailinfon"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_wk_ContainerData_Flattened')]",
				"[concat(variables('factoryId'), '/datasets/DS_aitscontactphoneinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aitspersoncontactphoneinfo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "ECCI_DataFlow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_wk_ContainerData_Flattened",
								"type": "DatasetReference"
							},
							"name": "aitsPersonContactEmailInfo"
						},
						{
							"dataset": {
								"referenceName": "aitsPersonContactPhoneInfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactphoneinfo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aitsPersonContactPhoneInfo",
								"type": "DatasetReference"
							},
							"name": "aitscontactemailinfon"
						}
					],
					"transformations": [
						{
							"name": "GUID"
						},
						{
							"name": "IDLK"
						},
						{
							"name": "DateLK"
						},
						{
							"name": "DrivedDate"
						},
						{
							"name": "Upsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonId as string,",
						"          ContainerId as string,",
						"          Address_Apt_Unit as string,",
						"          Address_City as string,",
						"          Address_State as string,",
						"          Address_Street as string,",
						"          Address_Zip as string,",
						"          Advanced_Course_Name as string,",
						"          Advanced_Course_Type as string,",
						"          Advanced_Courses_Taken as string,",
						"          Awards_Selector as string,",
						"          College as string,",
						"          Date_Attended as string,",
						"          Date_of_Birth_Month as string,",
						"          Date_of_Birth_Year as string,",
						"          Disciplinary_Issues as string,",
						"          Do_Not_Contact as string,",
						"          Email as string,",
						"          Email_list_opt_out as string,",
						"          Ethnicity as string,",
						"          Event_Attendance as string,",
						"          Event_Attendance_Describe as string,",
						"          Event_City as string,",
						"          Event_State as string,",
						"          Extracurricular_Activities as string,",
						"          Extracurricular_Activities_Years as string,",
						"          Extracurricular_Selector as string,",
						"          First_Name as string,",
						"          Gender as string,",
						"          GPA_Scale as string,",
						"          Grade_Level_Junior as string,",
						"          Grade_Level_Junior_or_Sophomore as string,",
						"          Graduation_Year as string,",
						"          Homeschooled as string,",
						"          Hometown_City as string,",
						"          Hometown_State as string,",
						"          Honors_Awards as string,",
						"          Influencer_Opt_In as string,",
						"          Interests as string,",
						"          JROTC_Branch as string,",
						"          JROTC_Selector as string,",
						"          Last_Name as string,",
						"          Leadership_Selector as string,",
						"          Leadership_Years as string,",
						"          Legal_Infraction as string,",
						"          Legal_Resident as string,",
						"          Letter_of_Recommendation_1 as string,",
						"          Marines_Opt_In as string,",
						"          Nominee as string,",
						"          Nominee_Relationship as string,",
						"          Occupation as string,",
						"          Other_Courses as string,",
						"          Other_Interests as string,",
						"          Other_Marines_Relationship_Type as string,",
						"          Other_Nominee_Relationship as string,",
						"          Other_Occuptation as string,",
						"          Other_Sports as string,",
						"          Phone_Number as string,",
						"          Poolee_Academy_NROTC as string,",
						"          Poolee_Academy_NROTC_Delayed_Entry_Program as string,",
						"          Referral as string,",
						"          Referral_Other as string,",
						"          Relationship_to_Marines as string,",
						"          School_Name as string,",
						"          School_Community_Leadership as string,",
						"          SIPRM_Username as string,",
						"          SLCDA_Referral as string,",
						"          Source as string,",
						"          Sports_JV_Varsity as string,",
						"          Sports_Played as string,",
						"          Sports_Selector as string,",
						"          Sports_Years_Played as string,",
						"          Team_Captain as string,",
						"          Team_Captain_Describe as string,",
						"          Visible_Tattoos as string,",
						"          Volunteer_Hours_Week as string,",
						"          Volunteer_Selector as string,",
						"          Volunteer_Work as string,",
						"          Work_Experience as string,",
						"          Work_Selector as string,",
						"          Work_Years as string,",
						"          DateCreatedUTC as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> aitsPersonContactEmailInfo",
						"source(output(",
						"          id as string,",
						"          fk_personId as string,",
						"          fk_contactPhoneInfoId as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> aitscontactphoneinfo",
						"aitsPersonContactEmailInfo derive(GUID = uuid()) ~> GUID",
						"GUID, aitscontactphoneinfo exists(GUID == id,",
						"     negate:true,",
						"     broadcast: 'both')~> IDLK",
						"IDLK, aitscontactphoneinfo lookup(PersonId == fk_personId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> DateLK",
						"DateLK derive(createdBy = iif(isNull(createdBy),'Thom-Dev',createdBy),",
						"          createdDateGMT = iif(isNull(createdDateGmt),currentTimestamp(),createdDateGmt),",
						"          updatedBy = 'Thom-Dev',",
						"          updatedDateGMT = currentTimestamp()) ~> DrivedDate",
						"DrivedDate alterRow(upsertIf(true())) ~> Upsert",
						"Upsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          fk_personId as string,",
						"          fk_contactPhoneInfoId as string,",
						"          createdBy as string,",
						"          createdDateGmt as timestamp,",
						"          updatedBy as string,",
						"          updatedDateGmt as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = GUID,",
						"          fk_personId = PersonId,",
						"          createdBy,",
						"          createdDateGmt = aitscontactphoneinfo@createdDateGmt,",
						"          updatedBy,",
						"          updatedDateGmt = aitscontactphoneinfo@updatedDateGmt,",
						"          each(match(/* All input columns */true()),",
						"               /* Input name */$$ = $$)",
						"     )) ~> aitscontactemailinfon"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_wk_ContainerData_Flattened')]",
				"[concat(variables('factoryId'), '/datasets/aitsPersonContactPhoneInfo')]"
			]
		}
	]
}