{
	"name": "AitsEventContract",
	"properties": {
		"folder": {
			"name": "CMR_DataFlow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CMR_Dest",
						"type": "DatasetReference"
					},
					"name": "CMR"
				},
				{
					"dataset": {
						"referenceName": "AitsMarketingPromotion",
						"type": "DatasetReference"
					},
					"name": "AitsMarketingPromotion"
				},
				{
					"dataset": {
						"referenceName": "loc_mcrc_unit",
						"type": "DatasetReference"
					},
					"name": "LocMcrcUnit"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AitsEventContract",
						"type": "DatasetReference"
					},
					"name": "aitsEventContract",
					"description": "Export data to aitsAddressInfo"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumns"
				},
				{
					"name": "Upsert"
				},
				{
					"name": "JoinMarketingPromotion"
				},
				{
					"name": "joinLocMcrcUnit"
				}
			],
			"scriptLines": [
				"parameters{",
				"     parameter1 as string ('AzurePipeline')",
				"}",
				"source(output(",
				"          id as string,",
				"          parentId as string,",
				"          name as string,",
				"          cost as string,",
				"          dateContractedSigned as string,",
				"          eacCode as string,",
				"          approverId as string,",
				"          approvalDue as string,",
				"          regionCode as string,",
				"          districtCode as string,",
				"          recruitingStationCode as string,",
				"          recruitingSubStationCode as string,",
				"          ossCode as string,",
				"          fundingRegionCode as string,",
				"          fundingDistrictCode as string,",
				"          fundingRecruitingStationCode as string,",
				"          fundingRecruitingSubStationCode as string,",
				"          fundingOssCode as string,",
				"          qualifiedName as string,",
				"          sourceCode as string,",
				"          fiscalYear as string,",
				"          city as string,",
				"          state as string,",
				"          startDate as string,",
				"          endDate as string,",
				"          customCategory as string,",
				"          type as string,",
				"          status as string,",
				"          subStatus as string,",
				"          isFromPr as string,",
				"          isFromEac as string,",
				"          contract as string,",
				"          schoolName as string,",
				"          raoUsername as string,",
				"          rejectComments as string,",
				"          approvedDistrictName as string,",
				"          approvedRecruitingStationName as string,",
				"          approvedRecruitingSubStationName as string,",
				"          approvingUser as string,",
				"          approvingBillet as string,",
				"          approvingLocation as string,",
				"          purpose as string,",
				"          estAttendance as string,",
				"          behavior as string,",
				"          awareness as string,",
				"          estEngagements as string,",
				"          estMediaPosts as string,",
				"          estMediaImpressions as string,",
				"          estSocialMediaPosts as string,",
				"          estSocialMediaImpressions as string,",
				"          estQualifiedLeads as string,",
				"          estInfluencerContacts as string,",
				"          estFollowUps as string,",
				"          estInteraction as string,",
				"          estInfluencerInteraction as string,",
				"          estOnsiteActivations as string,",
				"          deliverable as string,",
				"          addlDeliverables as string,",
				"          recommend as string,",
				"          emvAttend as string,",
				"          recommendReason as string,",
				"          assignedBy as string,",
				"          oldCategory as string,",
				"          oldEventId as string,",
				"          createdById as string,",
				"          createdByUsername as string,",
				"          updatedById as string,",
				"          updatedByUsername as string,",
				"          createdAt as string,",
				"          updatedAt as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     multiLineRow: true) ~> CMR",
				"source(output(",
				"          id as string,",
				"          aitsBaselineId as string,",
				"          fk_marketingCampaignId as string,",
				"          name as string,",
				"          statusLookup as string,",
				"          startDateGmt as date,",
				"          endDateGmt as date,",
				"          isRecurrence as integer,",
				"          isWebFacing as integer,",
				"          submitter as string,",
				"          submitterFormatted as string,",
				"          submittedDateGmt as timestamp,",
				"          shortDescription as string,",
				"          detailedDescription as string,",
				"          landingPageUriAfterPromo as string,",
				"          landingPageUriDuringPromo as string,",
				"          fk_reviewId as string,",
				"          createdBy as string,",
				"          createdDateGmt as timestamp,",
				"          updatedBy as string,",
				"          updatedDateGmt as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> AitsMarketingPromotion",
				"source(output(",
				"          ID as string,",
				"          NAME_FULL as string,",
				"          NAME_SHORT as string,",
				"          FK_TYPE_ID as string,",
				"          FK_PARENT_UNIT_ID as string,",
				"          CREATED_BY as string,",
				"          CREATED_DATE_TIME as timestamp,",
				"          UPDATED_BY as string,",
				"          UPDATED_DATE_TIME as timestamp,",
				"          AITS_BASELINE_ID as string,",
				"          APPIAN_GROUP_ID as string,",
				"          IS_ACTIVE as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> LocMcrcUnit",
				"joinLocMcrcUnit derive(guid = uuid(),",
				"          CreateDate = currentTimestamp(),",
				"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
				"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
				"CMR, AitsMarketingPromotion join(CMR@id == aitsBaselineId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMarketingPromotion",
				"JoinMarketingPromotion, LocMcrcUnit join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLocMcrcUnit",
				"Upsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          name as string,",
				"          systemGeneratedName as string,",
				"          selfReportedOtherCategory as string,",
				"          purpose as string,",
				"          EVENT_TYPE as string,",
				"          cost as double,",
				"          LOCATION_NAME as string,",
				"          STREET_ADDRESS1 as string,",
				"          STREET_ADDRESS2 as string,",
				"          city as string,",
				"          stateLookup as string,",
				"          zipCode as string,",
				"          fk_fiscalYearId as string,",
				"          fk_afteractionId as string,",
				"          fk_fundingMcrcUnitId as integer,",
				"          fk_purchaseRequestId as string,",
				"          fk_parentEventContractId as string,",
				"          fk_proposalFileId as string,",
				"          fk_promotionId as string,",
				"          assignedOwner as string,",
				"          statusLookup as string,",
				"          subStatusLookup as string,",
				"          dateContractSigned as timestamp,",
				"          deliverables as string,",
				"          additionalDeliverables as string,",
				"          personalInNatureDeliverables as string,",
				"          estimatedAttendence as integer,",
				"          estimatedNumberOfInfluencerContacts as integer,",
				"          estimatedNumberOfLeads as integer,",
				"          estimatedNumberOfOverallInteractions as integer,",
				"          estimatedNumberOfSocialMediaImpressions as integer,",
				"          estimatedNumberOfSocialMediaPosts as integer,",
				"          estimatedNumberOfTraditionalMediaPosts as integer,",
				"          estimatedNumberOfTraditionalImpressions as integer,",
				"          numberOfContractedOnSiteActivations as integer,",
				"          hasPersonalInNatureDeliverables as integer,",
				"          isContracted as integer,",
				"          isFree as integer,",
				"          hheac as string,",
				"          submitter as string,",
				"          createdBy as string,",
				"          createdDateGmt as timestamp,",
				"          updatedBy as string,",
				"          updatedDateGmt as timestamp,",
				"          fk_proposalId as string,",
				"          hasParentContract as integer,",
				"          startDateGmt as timestamp,",
				"          endDateGmt as timestamp,",
				"          usesHandheld as integer,",
				"          isforInfluencers as integer,",
				"          includesBattlePosition as integer,",
				"          fk_McrcUnitId as integer,",
				"          aitsBaselineId as string,",
				"          FK_LOC_UNIT_ID as string,",
				"          rmiFields as string,",
				"          rmiQuestions as string,",
				"          FK_ASSIGNED_OWNER_LOC_UNIT_ID as string,",
				"          assignedDate as timestamp,",
				"          dueDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id = guid,",
				"          fk_parentEventContractId = parentId,",
				"          deliverables = deliverable,",
				"          additionalDeliverables = addlDeliverables,",
				"          dateContractSigned = dateContractedSigned,",
				"          name,",
				"          cost,",
				"          hheac = eacCode,",
				"          startDateGmt = startDate,",
				"          city,",
				"          endDateGmt = endDate,",
				"          statusLookup = status,",
				"          subStatusLookup = subStatus,",
				"          systemGeneratedName = qualifiedName,",
				"          stateLookup = state,",
				"          selfReportedOtherCategory = customCategory,",
				"          purpose,",
				"          estimatedAttendence = estAttendance,",
				"          estimatedNumberOfTraditionalMediaPosts = estMediaPosts,",
				"          estimatedNumberOfTraditionalImpressions = estMediaImpressions,",
				"          estimatedNumberOfSocialMediaPosts = estSocialMediaPosts,",
				"          estimatedNumberOfSocialMediaImpressions = estSocialMediaImpressions,",
				"          estimatedNumberOfLeads = estQualifiedLeads,",
				"          estimatedNumberOfInfluencerContacts = estInfluencerContacts,",
				"          estimatedNumberOfOverallInteractions = estInteraction,",
				"          createdBy = createdByUsername,",
				"          updatedBy = updatedByUsername,",
				"          createdDateGmt = createdAt,",
				"          updatedDateGmt = updatedAt,",
				"          fk_promotionId = AitsMarketingPromotion@id,",
				"          aitsBaselineId = CMR@id",
				"     )) ~> aitsEventContract"
			]
		}
	}
}