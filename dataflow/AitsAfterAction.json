{
	"name": "AitsAfterAction",
	"properties": {
		"folder": {
			"name": "CMR_DataFlow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EventReport",
						"type": "DatasetReference"
					},
					"name": "CMR"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AitsAfterAction",
						"type": "DatasetReference"
					},
					"name": "aitsAfterAction",
					"description": "Export data to aitsAddressInfo"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumns"
				},
				{
					"name": "Upsert"
				}
			],
			"scriptLines": [
				"parameters{",
				"     parameter1 as string ('AzurePipeline')",
				"}",
				"source(output(",
				"          id as string,",
				"          userId as string,",
				"          eventId as string,",
				"          approverId as string,",
				"          approvalDue as string,",
				"          status as string,",
				"          subStatus as string,",
				"          attendance as string,",
				"          marinesAttendance as string,",
				"          leadCards as string,",
				"          attended as string,",
				"          interviewsScheduled as string,",
				"          recruiter as string,",
				"          electricity as string,",
				"          accommodating as string,",
				"          recommend as string,",
				"          emvAttend as string,",
				"          recommendReason as string,",
				"          deliverable as string,",
				"          description as string,",
				"          objective as string,",
				"          behavior as string,",
				"          awareness as string,",
				"          engagements as string,",
				"          mediaPosts as string,",
				"          mediaImpressions as string,",
				"          socialMediaPosts as string,",
				"          socialMediaImpressions as string,",
				"          qualifiedLeads as string,",
				"          influencerContacts as string,",
				"          followUps as string,",
				"          interaction as string,",
				"          influencerInteraction as string,",
				"          onsiteActivations as string,",
				"          targetMarketRating as string,",
				"          targetMarketComments as string,",
				"          estimatedAttendance as string,",
				"          estimatedTargetAttendance as string,",
				"          comingOfAgeRating as string,",
				"          comingOfAgeComments as string,",
				"          influentialRating as string,",
				"          influentialComments as string,",
				"          communityRelationsRating as string,",
				"          communityRelationsComments as string,",
				"          leadGenerationRating as string,",
				"          leadGenerationComments as string,",
				"          keyParticipants as string,",
				"          problems as string,",
				"          concerns as string,",
				"          comments as string,",
				"          approvedDistrictName as string,",
				"          approvedRecruitingStationName as string,",
				"          approvingUser as string,",
				"          approvingBillet as string,",
				"          approvingLocation as string,",
				"          createdById as string,",
				"          createdByUsername as string,",
				"          updatedById as string,",
				"          updatedByUsername as string,",
				"          createdAt as string,",
				"          updatedAt as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     multiLineRow: true) ~> CMR",
				"CMR derive(guid = uuid(),",
				"          CreateDate = currentTimestamp(),",
				"          CreatedBy = 'AzurePipeline') ~> DerivedColumns",
				"DerivedColumns alterRow(upsertIf(true())) ~> Upsert",
				"Upsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          problemsOrConcerns as string,",
				"          description as string,",
				"          deliverables as string,",
				"          additionalDeliverables as string,",
				"          personalInNatureDeliverables as string,",
				"          numberOfAttendees as integer,",
				"          numberOfInfluencerContactsGenerated as integer,",
				"          numberOfLeadCardsSubmitted as integer,",
				"          numberOfLeadsThatInteractedWithMarines as integer,",
				"          numberOfOverallInteractions as integer,",
				"          numberOfSocialMediaImpressions as integer,",
				"          numberOfSocialMediaPosts as integer,",
				"          numberOfTraditionalMediaImpressions as integer,",
				"          numberOfTraditionalMediaPosts as integer,",
				"          objective as string,",
				"          ownerBilletGroup as string,",
				"          statusLookup as string,",
				"          subStatusLookup as string,",
				"          createdBy as string,",
				"          createdDateGmt as timestamp,",
				"          updatedBy as string,",
				"          updatedDateGmt as timestamp,",
				"          numberOfQualifiedLeadsGenerated as integer,",
				"          aitsBaselineId as string,",
				"          numberOfInfluencersThatInteractedWithMarines as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          statusLookup = status,",
				"          numberOfAttendees = attendance,",
				"          numberOfLeadCardsSubmitted = leadCards,",
				"          deliverables = deliverable,",
				"          description,",
				"          objective,",
				"          numberOfTraditionalMediaPosts = mediaPosts,",
				"          numberOfTraditionalMediaImpressions = mediaImpressions,",
				"          numberOfSocialMediaPosts = socialMediaPosts,",
				"          numberOfSocialMediaImpressions = socialMediaImpressions,",
				"          numberOfQualifiedLeadsGenerated = qualifiedLeads,",
				"          numberOfInfluencerContactsGenerated = influencerContacts,",
				"          numberOfOverallInteractions = interaction,",
				"          numberOfAttendees = estimatedAttendance,",
				"          problemsOrConcerns = problems,",
				"          problemsOrConcerns = concerns,",
				"          createdBy = createdByUsername,",
				"          updatedBy = updatedByUsername,",
				"          createdDateGmt = CreateDate,",
				"          updatedDateGmt = updatedAt",
				"     )) ~> aitsAfterAction"
			]
		}
	}
}